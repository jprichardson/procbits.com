[
    {
        "date_created_gmt": "2012-03-21T03:55:19.000Z",
        "user_id": "0",
        "comment_id": "504",
        "parent": "0",
        "status": "approve",
        "content": "So this code above has a major flaw when dealing with resource disposing, it will saturate the allowed opened connections to one host defined by HttpWebRequest which are 2, causing your application to hangs and throw an exception being unable to communicate with the server. So here is modifided code which I came up with that resolves this issue:\r\n\r\nFile name: UploadFormHandler.cs or HttpForm.cs as used in post.\r\n\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Net;\r\nusing System.Collections.Specialized;\r\nusing System.IO;\r\nusing System.Windows.Forms;\r\nusing System.Net.Cache;\r\n\r\nnamespace Mooteso\r\n{\r\n    public class UploadFormHandler\r\n    {\r\n\r\n        private Dictionary _data = new Dictionary();\r\n        private Dictionary _values = new Dictionary();\r\n\r\n        public UploadFormHandler(string url)\r\n        {\r\n            this.Url = url;\r\n            this.Method = \"POST\";\r\n        }\r\n\r\n        public string Method { get; set; }\r\n\r\n        public string Url { get; set; }\r\n\r\n        public UploadFormHandler AttachFile(string field, string fileName)\r\n        {\r\n            _data[field] = fileName;\r\n            return this;\r\n        }\r\n\r\n        public UploadFormHandler ResetForm()\r\n        {\r\n            _data.Clear();\r\n            _values.Clear();\r\n            return this;\r\n        }\r\n\r\n        public UploadFormHandler SetValue(string field, string value)\r\n        {\r\n            _values[field] = value;\r\n            return this;\r\n        }\r\n\r\n        public void Submit()\r\n        {\r\n            UploadFiles(_data, _values);\r\n        }\r\n\r\n\r\n        private void UploadFiles(Dictionary data, Dictionary otherValues)\r\n        {\r\n            HttpWebRequest _request = (HttpWebRequest)WebRequest.Create(this.Url);\r\n            _request.KeepAlive = true;\r\n            _request.UserAgent = \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.79 Safari/535.11\";\r\n            _request.CachePolicy = policy;\r\n            _request.CookieContainer = CookieWebClient.cookie; //Add existing cookies.\r\n            _request.Timeout = 5000;\r\n            _request.AllowAutoRedirect = false;\r\n\r\n            var _mimeParts = new List();\r\n            try\r\n            {\r\n                if (otherValues != null)\r\n                {\r\n                    foreach (var fieldName in otherValues.Keys)\r\n                    {\r\n                        var part = new MimePart();\r\n\r\n                        part.Headers[\"Content-Disposition\"] = \"form-data; name=\\\"\" + fieldName + \"\\\"\";\r\n                        part.Data = new MemoryStream(Encoding.UTF8.GetBytes(otherValues[fieldName]));\r\n\r\n                        _mimeParts.Add(part);\r\n                    }\r\n                }\r\n\r\n                if (data != null)\r\n                {\r\n                    foreach (var fieldName in data.Keys)\r\n                    {\r\n                        var part = new MimePart();\r\n\r\n                        part.Headers[\"Content-Disposition\"] = \"form-data; name=\\\"\" + fieldName + \"\\\"; filename=\\\"\" + data[fieldName] + \"\\\"\";\r\n                        part.Headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\r\n                        part.Data = File.OpenRead(data[fieldName]);\r\n\r\n                        _mimeParts.Add(part);\r\n                    }\r\n                }\r\n\r\n                string boundary = \"----------\" + DateTime.Now.Ticks.ToString(\"x\");\r\n\r\n                _request.ContentType = \"multipart/form-data; boundary=\" + boundary;\r\n                _request.Method = this.Method;\r\n\r\n                long contentLength = 0;\r\n\r\n                byte[] _footer = Encoding.UTF8.GetBytes(\"--\" + boundary + \"--\\r\\n\");\r\n\r\n                foreach (MimePart part in _mimeParts)\r\n                {\r\n                    contentLength += part.GenerateHeaderFooterData(boundary);\r\n                }\r\n\r\n                _request.ContentLength = contentLength + _footer.Length;\r\n\r\n                byte[] buffer = new byte[8192];\r\n                byte[] afterFile = Encoding.UTF8.GetBytes(\"\\r\\n\");\r\n                int read;\r\n\r\n                using (Stream s = _request.GetRequestStream())\r\n                {\r\n                    foreach (MimePart part in _mimeParts)\r\n                    {\r\n                        s.Write(part.Header, 0, part.Header.Length);\r\n\r\n                        while ((read = part.Data.Read(buffer, 0, buffer.Length)) &gt; 0)\r\n                            s.Write(buffer, 0, read);\r\n\r\n                        part.Data.Dispose();\r\n                        s.Write(afterFile, 0, afterFile.Length);\r\n                    }\r\n                    s.Write(_footer, 0, _footer.Length);\r\n                    s.Close();\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show(ex.Message);\r\n                foreach (MimePart part in _mimeParts)\r\n                    if (part.Data != null)\r\n                        part.Data.Dispose();\r\n            }\r\n        }\r\n    }\r\n}",
        "link": "https://procbits.wordpress.com/2012/02/29/submittingposting-files-and-fields-to-an-http-form-using-c-net/#comment-504",
        "post_id": "305",
        "post_title": "Submitting/Posting Files and Fields to an HTTP Form using&nbsp;C#/.NET",
        "author": "wesko87",
        "author_url": "http://gravatar.com/wesko87",
        "author_email": "iker_arnauda@hotmail.com",
        "author_ip": "189.169.137.233",
        "type": ""
    }
]