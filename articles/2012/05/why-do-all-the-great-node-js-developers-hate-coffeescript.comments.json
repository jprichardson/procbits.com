[
    {
        "date_created_gmt": "2012-10-07T12:26:58.000Z",
        "user_id": "0",
        "comment_id": "676",
        "parent": "656",
        "status": "approve",
        "content": "Ruby really isn't consistent at all.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-676",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "Craig",
        "author_url": "",
        "author_email": "cbgnome@gmail.com",
        "author_ip": "86.136.18.206",
        "type": ""
    },
    {
        "date_created_gmt": "2012-10-07T11:48:07.000Z",
        "user_id": "0",
        "comment_id": "675",
        "parent": "650",
        "status": "approve",
        "content": "The CoffeeScript issue tracker is a total clusterf*ck of edge cases. Designer syntax just isn't worth the pain. Give me Lua any day, the most bland and yet reliable language I've ever used.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-675",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "Craig",
        "author_url": "",
        "author_email": "cbgnome@gmail.com",
        "author_ip": "86.136.18.206",
        "type": ""
    },
    {
        "date_created_gmt": "2012-08-28T20:54:51.000Z",
        "user_id": "3046554",
        "comment_id": "660",
        "parent": "653",
        "status": "approve",
        "content": "Subjective indeed.\r\n\r\nOne point that I think we can all agree on and really important to consider, as you said, developers spend more time reading code than writing code. I guess where we differ on opinion is what is more readable or has more clarity.\r\n\r\nI do find it ironic that https://github.com/component/string/blob/master/test/string.js uses should.js which (since you wrote it =p) encourages verbal readability. Conversely, I just prefer a simple assert(someCondition) or T (someCondition). Once again, subjective preferences.\r\n\r\nAnyway, I do appreciate you dropping by to share your comments. I've found a good home in the Node.js community and I'm really enjoying writing JavaScript, so I'm sure we'll cross paths again.\r\n\r\nTake care.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-660",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "JP",
        "author_url": "http://gitpilot.com",
        "author_email": "jprichardson@gmail.com",
        "author_ip": "208.82.105.200",
        "type": ""
    },
    {
        "date_created_gmt": "2012-08-28T20:46:45.000Z",
        "user_id": "5922742",
        "comment_id": "659",
        "parent": "656",
        "status": "approve",
        "content": "$ node debug script.js\r\n\r\ndoes a pretty good job. but yeah I mean js is a pretty nice language, people that write bad code will write bad code in any language but I think CS makes that pretty easy and even advocates it with the features it provides. Personally I think Ruby is a terrible language, it's confused and misguided, the grammar is a huge mess (why the hell do they need %w( foo bar baz ) etc), I just consider it the \"clusterfuck\" language, so many work-arounds for classes since they're so inflexible so it becomes very inelegant, they're constantly changing / \"upgrading\" the syntax in various ways so you have a lot of legacy junk as well, the js object model is much nicer, if you get rid of .prototype and constructors at least.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-659",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "tjholowaychuk",
        "author_url": "",
        "author_email": "tj@vision-media.ca",
        "author_ip": "96.50.119.149",
        "type": ""
    },
    {
        "date_created_gmt": "2012-08-28T14:02:14.000Z",
        "user_id": "0",
        "comment_id": "656",
        "parent": "652",
        "status": "approve",
        "content": "Thanks TJ HWC! I've been wondering why you dislike coffeescript for a while.\r\n\r\nThose are some very good points. I very much agree with CS introducing ambiguity. I used to think that it's a matter of getting used to the new \"cleaner\" syntax, but after using it in my work for a while, I agree that huge CS files can get unreadable simply because it is too empty - there's nothing to \"guide you\".\r\n\r\nIn HCI terms, having parens { [ ( ) ] }  isn't necessarily distracting, but can be rather helpful because of the Gestalt principles. ( http://en.wikipedia.org/wiki/Gestalt_psychology )\r\n\r\nI too prefer symbols \"==\"  \"!=\" \"||\"  over CS's verbose counterparts. I agree with OP that the relationship can be \"felt\"\r\n\r\nI still think ruby is an amazing language though (ruby, not rails - never used rails). It's extremely thought-out and consistent. I also think the parenthesislessness suits ruby as it behaves consistently - unlike CS where  \"derp\"  !=  \"derp()\"  while \"derp mario\" == \"derp(mario)\". Ruby also perfectly conforms to the encapsulation principles through *only* having methods available to the users. That combined with skipping parens makes perfect attributes \"disguised\" as methods - which it *always* will be since it's ruby and every rubyist will know.\r\n\r\nAnd then there's blocks. Those are awesome!\r\n\r\nTo sum up, I think I'll move back to programming pure javascript based on what I've read lately &amp; my own experience with big messy CS files. Debugging is a very big thing for me as well as I'm in love with firebugs debugger. ^^\r\n\r\nCan I ask how you debug your server side node.js javascript? :)",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-656",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "LarsQuarky",
        "author_url": "",
        "author_email": "larsquarky@twitter.com",
        "author_ip": "80.202.88.63",
        "type": ""
    },
    {
        "date_created_gmt": "2012-08-27T22:45:59.000Z",
        "user_id": "5922742",
        "comment_id": "655",
        "parent": "653",
        "status": "approve",
        "content": "Oh and implicit parens are really gross too :s not fun to read at all, by the time I left Ruby even most rubyists stopped using them",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-655",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "tjholowaychuk",
        "author_url": "",
        "author_email": "tj@vision-media.ca",
        "author_ip": "184.70.76.178",
        "type": ""
    },
    {
        "date_created_gmt": "2012-08-27T22:42:39.000Z",
        "user_id": "5922742",
        "comment_id": "654",
        "parent": "653",
        "status": "approve",
        "content": "A \"nice language\" is certainly subjective, and I think that's really where coffeescript comes in, it bridges the cap for python / ruby people to start getting more into javascript, whether or not it's a good language. I do agree that you should use whatever tools you like, just from personal experience most of the \"features\" CS provides are actually quite terrible.\r\n\r\nThese opinions obviously adjust with experience over time, for example I used to love Ruby, I used it for a few years and then I began to realize that the language has a lot of features that advocate ambiguity and obscurity, so I started to really hate using it in practice, especially libraries that used some of these more magical features. You can tell people \"oh just ignore those features\", but when you're building a community there's no escaping them.\r\n\r\nI've said it before and I do think coffeescript looks fantastic when you're staring at very small snippets or example code, but that's really where it stops. Large bodies, especially indented several levels are very difficult to parse in your mind, sure it's less to type, but programmers spend most of their time reading (their own, or others) code, not writing. The argument that you'll write much less code is a fallacy, for example I pretty much never type \"function\", this is what editors are for, \"f-&gt;tab\" is fine. People say js function definitions are too verbose, personally I call it clarity, not verbosity, \"function\" and \"return\" stand out and give you immediate feedback. Something like \"-&gt;\" again looks great with small functions, but otherwise is a very weak token and gets lost amongst the others. This argument applies to many of the other features as well, list comprehension, the yaml-like object literals, they look great when used as configuration etc, but when you see them \"in the wild\" in production code they're very ambiguous and difficult to read.\r\n\r\nIt doesn't take a genius to get rid of most tokens in a language, hell Stylus serves as a great example of how far you can take that, but you introduce nothing but ambiguity. It's not all bad though, things like interpolation, multi-line strings and regular expressions are a given. IMHO the languages which deliberately restrict functionality are the elegant ones, Lua, Lisp etc, complexity is easy, simplicity not so much.\r\n\r\nPersonally I think this https://github.com/component/string/blob/master/test/string.js looks much more clear than your coffeescript tests, certainly not any less readable. I had originally started designing Luna to use significant whitespace, drawn in be the allure of small snippets that look nice, but after having seen really gross coffeescript / stylus source I'm going to add braces back, the clarity just can't be beat, if your program looks like a novel you're doing it wrong IMO.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-654",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "tjholowaychuk",
        "author_url": "",
        "author_email": "tj@vision-media.ca",
        "author_ip": "184.70.76.178",
        "type": ""
    },
    {
        "date_created_gmt": "2012-08-27T21:53:20.000Z",
        "user_id": "3046554",
        "comment_id": "653",
        "parent": "652",
        "status": "approve",
        "content": "I'll preface my statements by stating that I've started writing my modules in JavaScript, as I prefer the purist approach (as sorta stated in your Component wiki). Since I wrote this article, I 've come to really like JavaScript. However, I still really like CoffeeScript. But, I digress.\r\n\r\nOK, so I understand the ambiguous nature of implicit returns. But, if something is \"stolen\", \"inspired\", \"copied\"... whatever... does it really make it any less valuable? It seems to me that CoffeeScript took some good parts from Ruby and Python to blend into a nice language. My favorites being whitespace for declarative markup and optional parenthesis. What else does the author state? The debugging argument is a joke. I completely agree with you and the article on verbal readability does not necessarily imply that the code will be more readable, the author gives examples showing this.\r\n\r\nWhen it comes down to it, and I didn't consider this before actually writing a lot of JavaScript myself, but it could be said that JavaScript is good enough to get the job done, and it's native, so why not? I just still can't shake the idea that some actually hate it and make fun of those who use it. That just seems silly - in less it's in jest, than I'm all for that =)\r\n\r\nOk, now for your opinion... is this not very readable? https://github.com/jprichardson/string.js/blob/master/test/string.test.coffee (As an aside, I'm converting it all to JS soon, but I'm still interested in your opinion on the readability aspect of this CoffeeScript snippet).",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-653",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "JP",
        "author_url": "http://gitpilot.com",
        "author_email": "jprichardson@gmail.com",
        "author_ip": "208.82.105.200",
        "type": ""
    },
    {
        "date_created_gmt": "2012-08-27T21:30:39.000Z",
        "user_id": "5922742",
        "comment_id": "652",
        "parent": "0",
        "status": "approve",
        "content": "That article you mentioned (http://ryanflorence.com/2011/case-against-coffeescript/) describes it quite well. Implicit returns are atrocious, everything as an expression is stolen from ruby, most of the features are stolen from ruby, like the author of that article states, verbal readability does absolutely not equate to comprehension (look at applescript...). I still do prefer significant whitespace for declarative things like markup, however for logic (even large bodies of logic in stylus) I find it very difficult to read.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-652",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "tjholowaychuk",
        "author_url": "",
        "author_email": "tj@vision-media.ca",
        "author_ip": "184.70.76.178",
        "type": ""
    },
    {
        "date_created_gmt": "2012-08-27T21:25:32.000Z",
        "user_id": "5922742",
        "comment_id": "651",
        "parent": "0",
        "status": "approve",
        "content": "Plus keep in mind nothing is \"like coffeescript\", coffeescript is like python and others, there's not a single unique or inventive thing about coffeescript, quite the opposite really. I think it's a very poorly designed \"language\".",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-651",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "tjholowaychuk",
        "author_url": "",
        "author_email": "tj@vision-media.ca",
        "author_ip": "184.70.76.178",
        "type": ""
    },
    {
        "date_created_gmt": "2012-08-27T21:23:18.000Z",
        "user_id": "0",
        "comment_id": "650",
        "parent": "0",
        "status": "approve",
        "content": "Honestly some of those choices I made with Stylus turned out to be far too ambiguous and terrible, much like Coffeescript is ambiguous and terrible.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-650",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "tjholowaychuk",
        "author_url": "http://gravatar.com/tjholowaychuk",
        "author_email": "tj@vision-media.ca",
        "author_ip": "184.70.76.178",
        "type": ""
    },
    {
        "date_created_gmt": "2012-05-26T05:31:27.000Z",
        "user_id": "0",
        "comment_id": "565",
        "parent": "0",
        "status": "approve",
        "content": "As usual, coffeescript-doesnt-do-this argument. CoffeeScript does JavaScript through backticks for those mythical cases. Stylus looks like Python. Jade looks like Python. CoffeeScript looks like Python. Schluter complains ad-nauseum about semi-colons. There's no logic to it. My guess is it is not-invented-here syndrome. They didn't invent it, so it must not be any good.\r\n\r\nPlease don't bring up the debugger. If you have to rely on the debugger every time something goes wrong, you're probably not that good of a developer or are  working in a corporate cubible behind your IDE. Most of the time you can look at the error message and you know where you Fd up. And the times that you need a debugger all you have to do is look at the javascript error and filename and you can find the offending line with the same ease as if you had written it in Javascript.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-565",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "mark",
        "author_url": "",
        "author_email": "mark@no-reply.com",
        "author_ip": "184.177.175.227",
        "type": ""
    },
    {
        "date_created_gmt": "2012-05-25T20:04:54.000Z",
        "user_id": "3046554",
        "comment_id": "561",
        "parent": "559",
        "status": "approve",
        "content": "Eric, sure. My title may have been a bit of a poor choice. So feel free to change the title if need be. Just please link back to this page.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-561",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "JP",
        "author_url": "http://gitpilot.com",
        "author_email": "jprichardson@gmail.com",
        "author_ip": "208.82.105.200",
        "type": ""
    },
    {
        "date_created_gmt": "2012-05-25T02:55:02.000Z",
        "user_id": "0",
        "comment_id": "559",
        "parent": "0",
        "status": "approve",
        "content": "Would you be interested in getting this republished on DZone.com? - we've got readers interested in debating the costs/benefits of Node.js.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-559",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "Eric",
        "author_url": "http://www.dzone.com",
        "author_email": "egenesky@dzone.com",
        "author_ip": "71.65.236.232",
        "type": ""
    },
    {
        "date_created_gmt": "2012-05-19T01:55:18.000Z",
        "user_id": "3046554",
        "comment_id": "557",
        "parent": "556",
        "status": "approve",
        "content": "Hey Brandon, do you have any examples on either of your assertions? I haven't encountered one thing that CoffeeScript couldn't do that JavaScript can. Also, regarding your second point of unnecessary code, I'd argue that minification takes care of that.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-557",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "JP",
        "author_url": "http://gitpilot.com",
        "author_email": "jprichardson@gmail.com",
        "author_ip": "208.82.105.200",
        "type": ""
    },
    {
        "date_created_gmt": "2012-05-19T01:50:41.000Z",
        "user_id": "0",
        "comment_id": "556",
        "parent": "0",
        "status": "approve",
        "content": "This is simply because there are a lot of things that coffee-script doesn't provide which JavaScript does. On top of this, Coffee-Script generates a lot of unneeded code. Returning things that it doesn't need to, etc.",
        "link": "https://procbits.wordpress.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript/#comment-556",
        "post_id": "312",
        "post_title": "Why Do All the Great Node.js Developers Hate&nbsp;CoffeeScript?",
        "author": "Brandon Stoner (@monokrome)",
        "author_url": "http://twitter.com/monokrome",
        "author_email": "monokrome@twitter.example.com",
        "author_ip": "76.23.11.131",
        "type": ""
    }
]