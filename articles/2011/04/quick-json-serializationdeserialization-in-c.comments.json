[
    {
        "date_created_gmt": "2012-11-05T23:01:40.000Z",
        "user_id": "0",
        "comment_id": "684",
        "parent": "0",
        "status": "approve",
        "content": "Excellent article. Helped me with my exact needs for Json (this after I searched google for 2 hours).",
        "link": "https://procbits.wordpress.com/2011/04/21/quick-json-serializationdeserialization-in-c/#comment-684",
        "post_id": "156",
        "post_title": "Quick JSON Serialization/Deserialization in&nbsp;C#",
        "author": "San",
        "author_url": "",
        "author_email": "sankaran@saharti.com",
        "author_ip": "71.176.215.115",
        "type": ""
    },
    {
        "date_created_gmt": "2012-02-23T07:04:24.000Z",
        "user_id": "0",
        "comment_id": "448",
        "parent": "0",
        "status": "approve",
        "content": "This article helped me immensely. I was trying to deserialize some JSON put out by Twitter's API that has nested lists, and for the life of me I just could not figure out how to access the child elements of those nested lists. The key for me here was using \"dynamic\" in the Dictionary overload, and putting the Dictionary into List form. Then I was able to get at those elements.\r\nMANY thanks!",
        "link": "https://procbits.wordpress.com/2011/04/21/quick-json-serializationdeserialization-in-c/#comment-448",
        "post_id": "156",
        "post_title": "Quick JSON Serialization/Deserialization in&nbsp;C#",
        "author": "Will",
        "author_url": "",
        "author_email": "wgray@greenwichlibrary.org",
        "author_ip": "167.206.79.227",
        "type": ""
    },
    {
        "date_created_gmt": "2011-06-20T03:11:04.000Z",
        "user_id": "0",
        "comment_id": "162",
        "parent": "0",
        "status": "approve",
        "content": "Hi, many thanks for your great example. \r\nYour first statements could raise expectations that all examples work with .NET 3.5 framework (and so: VS 2008). But the \"dynamic\" keyword is introduced in C# 4.0 which means you need at least VS 2010.",
        "link": "https://procbits.wordpress.com/2011/04/21/quick-json-serializationdeserialization-in-c/#comment-162",
        "post_id": "156",
        "post_title": "Quick JSON Serialization/Deserialization in&nbsp;C#",
        "author": "GS",
        "author_url": "",
        "author_email": "gus-wp@guxx.net",
        "author_ip": "77.11.6.70",
        "type": ""
    },
    {
        "date_created_gmt": "2011-05-12T02:41:04.000Z",
        "user_id": "3046554",
        "comment_id": "152",
        "parent": "151",
        "status": "approve",
        "content": "Try this:\r\n\r\n<pre>\r\nvar json = \"[{\\\"id\\\":\\\"588\\\",\\\"value\\\":false},{\\\"id\\\":\\\"486\\\",\\\"value\\\":false}]\";\r\nvar jss = new JavaScriptSerializer();\r\nvar dic = jss.Deserialize(json);\r\nConsole.WriteLine(dic[0][\"id\"]);\r\n</pre>\r\n\r\nWorks just fine... does it not for you?",
        "link": "https://procbits.wordpress.com/2011/04/21/quick-json-serializationdeserialization-in-c/#comment-152",
        "post_id": "156",
        "post_title": "Quick JSON Serialization/Deserialization in&nbsp;C#",
        "author": "JP",
        "author_url": "http://techneur.com",
        "author_email": "jp@reflect7.com",
        "author_ip": "98.145.152.17",
        "type": ""
    },
    {
        "date_created_gmt": "2011-05-11T20:00:02.000Z",
        "user_id": "0",
        "comment_id": "151",
        "parent": "0",
        "status": "approve",
        "content": "again? ugrh? please redit, second example is Dictionary with [] and first without, it seems I can't put brackets into comment",
        "link": "https://procbits.wordpress.com/2011/04/21/quick-json-serializationdeserialization-in-c/#comment-151",
        "post_id": "156",
        "post_title": "Quick JSON Serialization/Deserialization in&nbsp;C#",
        "author": "Marko",
        "author_url": "http://twitter.com/marko999",
        "author_email": "mvucinic@gmail.com",
        "author_ip": "109.92.24.44",
        "type": ""
    },
    {
        "date_created_gmt": "2011-05-11T19:58:54.000Z",
        "user_id": "0",
        "comment_id": "150",
        "parent": "0",
        "status": "approve",
        "content": "hm, editor clear my code :)\r\nlet's try again\r\n\r\n<code>\r\n\r\njsonText = [{\"id\":\"588\",\"value\":false},{\"id\":\"486\",\"value\":false},...]\r\n\r\nvar dict = jss.Deserialize(jsonText); //compiler error\r\n\r\nneeds to be changed to:\r\n\r\nvar dict = jss.Deserialize(jsonText); //ok\r\n\r\n</code>",
        "link": "https://procbits.wordpress.com/2011/04/21/quick-json-serializationdeserialization-in-c/#comment-150",
        "post_id": "156",
        "post_title": "Quick JSON Serialization/Deserialization in&nbsp;C#",
        "author": "Marko",
        "author_url": "http://twitter.com/marko999",
        "author_email": "mvucinic@gmail.com",
        "author_ip": "109.92.24.44",
        "type": ""
    },
    {
        "date_created_gmt": "2011-05-11T19:53:24.000Z",
        "user_id": "0",
        "comment_id": "149",
        "parent": "148",
        "status": "approve",
        "content": "json looks something like this: [{\"id\":\"23\", true}, {\"id\":33, false}, ...]\r\nin that case I hadn't manage to deserialize to just , getting compiler errors...\r\n did the trick...cheers",
        "link": "https://procbits.wordpress.com/2011/04/21/quick-json-serializationdeserialization-in-c/#comment-149",
        "post_id": "156",
        "post_title": "Quick JSON Serialization/Deserialization in&nbsp;C#",
        "author": "Marko",
        "author_url": "http://twitter.com/marko999",
        "author_email": "mvucinic@gmail.com",
        "author_ip": "109.92.24.44",
        "type": ""
    },
    {
        "date_created_gmt": "2011-05-10T20:00:31.000Z",
        "user_id": "3046554",
        "comment_id": "148",
        "parent": "147",
        "status": "approve",
        "content": "Thanks for the compliment. \r\n\r\nI'm not sure why you would want to deserialize to an array of dictionaries though? I think it makes the most sense to deserialize to the dynamic data type.",
        "link": "https://procbits.wordpress.com/2011/04/21/quick-json-serializationdeserialization-in-c/#comment-148",
        "post_id": "156",
        "post_title": "Quick JSON Serialization/Deserialization in&nbsp;C#",
        "author": "JP",
        "author_url": "http://techneur.com",
        "author_email": "jp@reflect7.com",
        "author_ip": "208.82.105.200",
        "type": ""
    },
    {
        "date_created_gmt": "2011-05-10T19:53:25.000Z",
        "user_id": "0",
        "comment_id": "147",
        "parent": "0",
        "status": "approve",
        "content": "Hi, your solution helped me a lot..I just have one thing to add, example where you are using\r\n\r\nvar dict = jss.Deserialize&lt;Dictionary&gt;(jsonText);\r\n\r\nneeds to be changed to:\r\n\r\nvar dict = jss.Deserialize&lt;Dictionary[]&gt;(jsonText);\r\n\r\ncheers",
        "link": "https://procbits.wordpress.com/2011/04/21/quick-json-serializationdeserialization-in-c/#comment-147",
        "post_id": "156",
        "post_title": "Quick JSON Serialization/Deserialization in&nbsp;C#",
        "author": "Marko",
        "author_url": "http://twitter.com/marko999",
        "author_email": "mvucinic@gmail.com",
        "author_ip": "109.92.24.44",
        "type": ""
    }
]