[
    {
        "date_created_gmt": "2011-11-28T04:45:35.000Z",
        "user_id": "3046554",
        "comment_id": "391",
        "parent": "388",
        "status": "approve",
        "content": "This is a good thought. Do you know if other Unix file copy operations such as those found in Ruby or Python set corresponding file permissions?",
        "link": "https://procbits.wordpress.com/2011/11/15/synchronous-file-copy-in-node-js/#comment-391",
        "post_id": "274",
        "post_title": "Synchronous File Copy in&nbsp;Node.js",
        "author": "JP",
        "author_url": "http://techneur.com",
        "author_email": "jp@reflect7.com",
        "author_ip": "76.84.96.90",
        "type": ""
    },
    {
        "date_created_gmt": "2011-11-27T08:06:53.000Z",
        "user_id": "0",
        "comment_id": "388",
        "parent": "0",
        "status": "approve",
        "content": "Hi JP. I see an issue with your example. I'd suggest obtaining mode of source file descriptor and pass this in to openSync to ensure file modes of source and destination files are in sync following the copy.\r\n\r\nRegards,\r\nDavid",
        "link": "https://procbits.wordpress.com/2011/11/15/synchronous-file-copy-in-node-js/#comment-388",
        "post_id": "274",
        "post_title": "Synchronous File Copy in&nbsp;Node.js",
        "author": "David",
        "author_url": "",
        "author_email": "fairwinds.dp@gmail.com",
        "author_ip": "24.142.37.31",
        "type": ""
    }
]