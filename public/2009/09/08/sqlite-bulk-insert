<!DOCTYPE html>
<html lang="en">
  <head>
    <title>SQLite Bulk Insert In C#/.NET</title>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="JP Richardson">
    <link href="http://netdna.bootstrapcdn.com/bootswatch/2.1.1/spacelab/bootstrap.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/highlight.css" rel="stylesheet">
  </head>
  <body>
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid nav-container">
          <nav role="navigation"><a title="" href="http://procbits.com" class="brand">procbits</a>
            <p class="navbar-text pull-left">source code snippets and other random musings about software</p>
            <ul class="nav pull-right">             
              <li><a href="/tags">Tags</a></li>
              <li><a href="/rss.xml">RSS</a></li>
            </ul>
          </nav><a data-toggle="collapse" data-target=".nav-collapse" href="http://procbits.com" class="btn btn-navbar">procbits<span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></a>
        </div>
      </div>
    </div>
    <div class="container-fluid">
      <div id="content" class="clearfix row-fluid">
        <div id="main" role="main" class="span8 clearfix"><h1>SQLite Bulk Insert In C#/.NET</h1>

<p>Recently, I had a project where I needed to load 1 million+ records into
a SQLite database. I downloaded the <a href="http://sqlite.phxsoftware.com/">SQLite ADO.NET
adapter</a> and setup the Entity framework
to map to my SQLite database. All was simple and all was well!</p>
<p>I started inserting the data into my database; lo and behold, it was
taking forever! In fact, it took most of a full working day to insert my
data. I knew something wasn&#39;t right. A simple Google search pointed me
to the <a href="http://www.sqlite.org/faq.html#q19">SQLite FAQ</a>. It turns out
that SQLite wraps every INSERT into a transaction. Simple solution:
start a transaction and perform multiple INSERTs. I needed my inserts to
be fast, so I just had to write a class to encapsulate this.</p>
<p>It&#39;s very simple to use. Make sure that your SQLite database file has
been created and your table has been created as well.</p>
<p>Let&#39;s assume your database schema looks like the following: Id INTEGER
PRIMARY KEY AUTOINCREMENT NOT NULL, LastName VARCHAR(16) NOT NULL,
Height REAL NOT NULL</p>
<p>You would then use SQLiteBulkInsert as follows:</p>
<div class="highlight"><pre><span class="n">SQLiteBulkInsert</span> <span class="n">sbi</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteBulkInsert</span><span class="p">(</span><span class="n">yourDatabaseConnectionObject</span><span class="p">,</span> <span class="s">&quot;yourTableName&quot;</span><span class="p">);</span>
<span class="n">sbi</span><span class="p">.</span><span class="n">AddParameter</span><span class="p">(</span><span class="s">&quot;LastName&quot;</span><span class="p">,</span> <span class="n">DbType</span><span class="p">.</span><span class="n">String</span><span class="p">);</span>
<span class="n">sbi</span><span class="p">.</span><span class="n">AddParameter</span><span class="p">(</span><span class="s">&quot;Height&quot;</span><span class="p">,</span> <span class="n">DbType</span><span class="p">.</span><span class="n">Single</span><span class="p">);</span>
</pre></div>

<p>You can then insert records:</p>
<div class="highlight"><pre><span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="m">10000</span><span class="p">;</span> <span class="n">x</span><span class="p">++)</span>
    <span class="n">sbi</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="k">new</span> <span class="kt">object</span><span class="p">[]{</span><span class="n">someString</span><span class="p">,</span> <span class="n">someFloat</span><span class="p">});</span>
<span class="n">sbi</span><span class="p">.</span><span class="n">Flush</span><span class="p">();</span>
</pre></div>

<p>That&#39;s it! You should look at the file SQLiteBulkInsertTest.cs for more
details. SQLiteBulkInsert.cs:</p>
<div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Data.SQLite</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Data</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">YourProject.Data.SQLite</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">SQLiteBulkInsert</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="n">SQLiteConnection</span> <span class="n">m_dbCon</span><span class="p">;</span>
        <span class="k">private</span> <span class="n">SQLiteCommand</span> <span class="n">m_cmd</span><span class="p">;</span>
        <span class="k">private</span> <span class="n">SQLiteTransaction</span> <span class="n">m_trans</span><span class="p">;</span>

        <span class="k">private</span> <span class="n">Dictionary</span> <span class="n">m_parameters</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">();</span>

        <span class="k">private</span> <span class="kt">uint</span> <span class="n">m_counter</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

        <span class="k">private</span> <span class="kt">string</span> <span class="n">m_beginInsertText</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">SQLiteBulkInsert</span><span class="p">(</span><span class="n">SQLiteConnection</span> <span class="n">dbConnection</span><span class="p">,</span> <span class="kt">string</span> <span class="n">tableName</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">m_dbCon</span> <span class="p">=</span> <span class="n">dbConnection</span><span class="p">;</span>
            <span class="n">m_tableName</span> <span class="p">=</span> <span class="n">tableName</span><span class="p">;</span>

            <span class="n">StringBuilder</span> <span class="n">query</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="p">(</span><span class="m">255</span><span class="p">);</span>
            <span class="n">query</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="s">&quot;INSERT INTO [&quot;</span><span class="p">);</span> <span class="n">query</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">tableName</span><span class="p">);</span> <span class="n">query</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="s">&quot;] (&quot;</span><span class="p">);</span>
            <span class="n">m_beginInsertText</span> <span class="p">=</span> <span class="n">query</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="kt">bool</span> <span class="n">m_allowBulkInsert</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
        <span class="k">public</span> <span class="kt">bool</span> <span class="n">AllowBulkInsert</span> <span class="p">{</span> <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">m_allowBulkInsert</span><span class="p">;</span> <span class="p">}</span> <span class="k">set</span> <span class="p">{</span> <span class="n">m_allowBulkInsert</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span> <span class="p">}</span>

        <span class="k">public</span> <span class="kt">string</span> <span class="n">CommandText</span> <span class="p">{</span>
            <span class="k">get</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">m_parameters</span><span class="p">.</span><span class="n">Count</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="m">1</span><span class="p">)</span>
                    <span class="k">throw</span> <span class="k">new</span> <span class="nf">SQLiteException</span><span class="p">(</span><span class="s">&quot;You must add at least one parameter.&quot;</span><span class="p">);</span>

                <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="p">(</span><span class="m">255</span><span class="p">);</span>
                <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">m_beginInsertText</span><span class="p">);</span>

                <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">param</span> <span class="k">in</span> <span class="n">m_parameters</span><span class="p">.</span><span class="n">Keys</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="sc">&#39;[&#39;</span><span class="p">);</span>
                    <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">param</span><span class="p">);</span>
                    <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="sc">&#39;]&#39;</span><span class="p">);</span>
                    <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="n">sb</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">sb</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span>

                <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="s">&quot;) VALUES (&quot;</span><span class="p">);</span>

                <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">param</span> <span class="k">in</span> <span class="n">m_parameters</span><span class="p">.</span><span class="n">Keys</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">m_paramDelim</span><span class="p">);</span>
                    <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">param</span><span class="p">);</span>
                    <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="n">sb</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">sb</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span>

                <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="s">&quot;)&quot;</span><span class="p">);</span>

                <span class="k">return</span> <span class="n">sb</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="kt">uint</span> <span class="n">m_commitMax</span> <span class="p">=</span> <span class="m">10000</span><span class="p">;</span>
        <span class="k">public</span> <span class="kt">uint</span> <span class="n">CommitMax</span> <span class="p">{</span> <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">m_commitMax</span><span class="p">;</span> <span class="p">}</span> <span class="k">set</span> <span class="p">{</span> <span class="n">m_commitMax</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span> <span class="p">}</span>

        <span class="k">private</span> <span class="kt">string</span> <span class="n">m_tableName</span><span class="p">;</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">TableName</span> <span class="p">{</span> <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">m_tableName</span><span class="p">;</span> <span class="p">}</span> <span class="p">}</span>

        <span class="k">private</span> <span class="kt">string</span> <span class="n">m_paramDelim</span> <span class="p">=</span> <span class="s">&quot;:&quot;</span><span class="p">;</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">ParamDelimiter</span> <span class="p">{</span> <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">m_paramDelim</span><span class="p">;</span> <span class="p">}</span> <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">AddParameter</span><span class="p">(</span><span class="kt">string</span> <span class="n">name</span><span class="p">,</span> <span class="n">DbType</span> <span class="n">dbType</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">SQLiteParameter</span> <span class="n">param</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteParameter</span><span class="p">(</span><span class="n">m_paramDelim</span> <span class="p">+</span> <span class="n">name</span><span class="p">,</span> <span class="n">dbType</span><span class="p">);</span>
            <span class="n">m_parameters</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">param</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">Flush</span><span class="p">()</span> <span class="p">{</span>
            <span class="k">try</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">m_trans</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
                    <span class="n">m_trans</span><span class="p">.</span><span class="n">Commit</span><span class="p">();</span>
            <span class="p">}</span>
            <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span> <span class="p">{</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">Exception</span><span class="p">(</span><span class="s">&quot;Could not commit transaction. See InnerException for more details&quot;</span><span class="p">,</span> <span class="n">ex</span><span class="p">);</span> <span class="p">}</span>
            <span class="k">finally</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">m_trans</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
                    <span class="n">m_trans</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>

                <span class="n">m_trans</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
                <span class="n">m_counter</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">Insert</span><span class="p">(</span><span class="kt">object</span><span class="p">[]</span> <span class="n">paramValues</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">paramValues</span><span class="p">.</span><span class="n">Length</span> <span class="p">!=</span> <span class="n">m_parameters</span><span class="p">.</span><span class="n">Count</span><span class="p">)</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">Exception</span><span class="p">(</span><span class="s">&quot;The values array count must be equal to the count of the number of parameters.&quot;</span><span class="p">);</span>

            <span class="n">m_counter</span><span class="p">++;</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">m_counter</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">m_allowBulkInsert</span><span class="p">)</span>
                    <span class="n">m_trans</span> <span class="p">=</span> <span class="n">m_dbCon</span><span class="p">.</span><span class="n">BeginTransaction</span><span class="p">();</span>

                <span class="n">m_cmd</span> <span class="p">=</span> <span class="n">m_dbCon</span><span class="p">.</span><span class="n">CreateCommand</span><span class="p">();</span>
                <span class="k">foreach</span> <span class="p">(</span><span class="n">SQLiteParameter</span> <span class="n">par</span> <span class="k">in</span> <span class="n">m_parameters</span><span class="p">.</span><span class="n">Values</span><span class="p">)</span>
                    <span class="n">m_cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">par</span><span class="p">);</span>

                <span class="n">m_cmd</span><span class="p">.</span><span class="n">CommandText</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">CommandText</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="k">foreach</span> <span class="p">(</span><span class="n">SQLiteParameter</span> <span class="n">par</span> <span class="k">in</span> <span class="n">m_parameters</span><span class="p">.</span><span class="n">Values</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">par</span><span class="p">.</span><span class="n">Value</span> <span class="p">=</span> <span class="n">paramValues</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="n">i</span><span class="p">++;</span>
            <span class="p">}</span>

            <span class="n">m_cmd</span><span class="p">.</span><span class="n">ExecuteNonQuery</span><span class="p">();</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">m_counter</span> <span class="p">==</span> <span class="n">m_commitMax</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">try</span> <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">m_trans</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
                        <span class="n">m_trans</span><span class="p">.</span><span class="n">Commit</span><span class="p">();</span>
                <span class="p">}</span>
                <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>
                <span class="k">finally</span> <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">m_trans</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
                        <span class="n">m_trans</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>
                        <span class="n">m_trans</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
                    <span class="p">}</span>

                    <span class="n">m_counter</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

<p>SQLiteBulkInsertTest.cs:</p>
<div class="highlight"><pre><span class="k">using</span> <span class="nn">YourProject.Data.SQLite</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">Microsoft.VisualStudio.TestTools.UnitTesting</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Data.SQLite</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Data</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">TestYourProject</span>
<span class="p">{</span>
    <span class="c1">/// </span>
    <span class="c1">///This is a test class for SQLiteBulkInsertTest and is intended</span>
    <span class="c1">///to contain all SQLiteBulkInsertTest Unit Tests</span>
    <span class="c1">///</span>
<span class="na">    [TestClass()]</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">SQLiteBulkInsertTest</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">m_testDir</span><span class="p">;</span>
        <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">m_testFile</span><span class="p">;</span>
        <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">m_testTableName</span> <span class="p">=</span> <span class="s">&quot;test_table&quot;</span><span class="p">;</span>
        <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">m_connectionString</span><span class="p">;</span>

        <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">m_deleteAllQuery</span> <span class="p">=</span> <span class="s">&quot;DELETE FROM [{0}]&quot;</span><span class="p">;</span>
        <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">m_countAllQuery</span> <span class="p">=</span> <span class="s">&quot;SELECT COUNT(id) FROM [{0}]&quot;</span><span class="p">;</span>
        <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">m_selectAllQuery</span> <span class="p">=</span> <span class="s">&quot;SELECT * FROM [{0}]&quot;</span><span class="p">;</span>

        <span class="k">private</span> <span class="k">static</span> <span class="n">SQLiteConnection</span> <span class="n">m_dbCon</span><span class="p">;</span>
        <span class="k">private</span> <span class="k">static</span> <span class="n">SQLiteCommand</span> <span class="n">m_deleteAllCmd</span><span class="p">;</span>
        <span class="k">private</span> <span class="k">static</span> <span class="n">SQLiteCommand</span> <span class="n">m_countAllCmd</span><span class="p">;</span>
        <span class="k">private</span> <span class="k">static</span> <span class="n">SQLiteCommand</span> <span class="n">m_selectAllCmd</span><span class="p">;</span>

        <span class="k">private</span> <span class="n">TestContext</span> <span class="n">testContextInstance</span><span class="p">;</span>

        <span class="c1">/// </span>
        <span class="c1">///Gets or sets the test context which provides</span>
        <span class="c1">///information about and functionality for the current test run.</span>
        <span class="c1">///</span>
        <span class="k">public</span> <span class="n">TestContext</span> <span class="n">TestContext</span> <span class="p">{</span>
            <span class="k">get</span> <span class="p">{</span>
                <span class="k">return</span> <span class="n">testContextInstance</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">set</span> <span class="p">{</span>
                <span class="n">testContextInstance</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="cp">#region Additional test attributes</span>
        <span class="c1">//</span>
        <span class="c1">//You can use the following additional attributes as you write your tests:</span>
        <span class="c1">//</span>
        <span class="c1">//Use ClassInitialize to run code before running the first test in the class</span>
<span class="na">        [ClassInitialize()]</span>
        <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">MyClassInitialize</span><span class="p">(</span><span class="n">TestContext</span> <span class="n">testContext</span><span class="p">){</span>
            <span class="n">Random</span> <span class="n">rand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Random</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">TickCount</span><span class="p">);</span>
            <span class="kt">int</span> <span class="n">rn</span> <span class="p">=</span> <span class="n">rand</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="kt">int</span><span class="p">.</span><span class="n">MaxValue</span><span class="p">);</span>
            <span class="n">m_testDir</span> <span class="p">=</span> <span class="s">@&quot;C:\SqliteBulkInsertTest-&quot;</span> <span class="p">+</span> <span class="n">rn</span> <span class="p">+</span> <span class="s">@&quot;\&quot;</span><span class="p">;</span>
            <span class="n">m_testFile</span> <span class="p">=</span> <span class="n">m_testDir</span> <span class="p">+</span> <span class="s">&quot;db.sqlite&quot;</span><span class="p">;</span>

            <span class="k">if</span> <span class="p">(!</span><span class="n">Directory</span><span class="p">.</span><span class="n">Exists</span><span class="p">(</span><span class="n">m_testDir</span><span class="p">))</span>
                <span class="n">Directory</span><span class="p">.</span><span class="n">CreateDirectory</span><span class="p">(</span><span class="n">m_testDir</span><span class="p">);</span>

            <span class="k">if</span> <span class="p">(!</span><span class="n">File</span><span class="p">.</span><span class="n">Exists</span><span class="p">(</span><span class="n">m_testFile</span><span class="p">))</span> <span class="p">{</span>
                <span class="n">FileStream</span> <span class="n">fs</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="n">Create</span><span class="p">(</span><span class="n">m_testFile</span><span class="p">);</span>
                <span class="n">fs</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
            <span class="p">}</span>

            <span class="n">m_connectionString</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">@&quot;data source={0};datetimeformat=Ticks&quot;</span><span class="p">,</span> <span class="n">m_testFile</span><span class="p">);</span>
            <span class="n">m_dbCon</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteConnection</span><span class="p">(</span><span class="n">m_connectionString</span><span class="p">);</span>
            <span class="n">m_dbCon</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>

            <span class="n">SQLiteCommand</span> <span class="n">cmd</span> <span class="p">=</span> <span class="n">m_dbCon</span><span class="p">.</span><span class="n">CreateCommand</span><span class="p">();</span>
            <span class="kt">string</span> <span class="n">query</span> <span class="p">=</span> <span class="s">&quot;CREATE TABLE IF NOT EXISTS [{0}] (id INTEGER PRIMARY KEY AUTOINCREMENT, somestring VARCHAR(16), somereal REAL, someint INTEGER(4), somedt DATETIME)&quot;</span><span class="p">;</span>
            <span class="n">query</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="n">query</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>
            <span class="n">cmd</span><span class="p">.</span><span class="n">CommandText</span> <span class="p">=</span> <span class="n">query</span><span class="p">;</span>
            <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteNonQuery</span><span class="p">();</span>
        <span class="p">}</span>
        <span class="c1">//</span>
        <span class="c1">//Use ClassCleanup to run code after all tests in a class have run</span>
<span class="na">        [ClassCleanup()]</span>
        <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">MyClassCleanup</span><span class="p">(){</span>
            <span class="n">m_dbCon</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>

            <span class="n">File</span><span class="p">.</span><span class="n">Delete</span><span class="p">(</span><span class="n">m_testFile</span><span class="p">);</span>
            <span class="n">Directory</span><span class="p">.</span><span class="n">Delete</span><span class="p">(</span><span class="n">m_testDir</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="cp">#endregion</span>

        <span class="k">private</span> <span class="k">void</span> <span class="nf">AddParameters</span><span class="p">(</span><span class="n">SQLiteBulkInsert</span> <span class="n">target</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">target</span><span class="p">.</span><span class="n">AddParameter</span><span class="p">(</span><span class="s">&quot;somestring&quot;</span><span class="p">,</span> <span class="n">DbType</span><span class="p">.</span><span class="n">String</span><span class="p">);</span>
            <span class="n">target</span><span class="p">.</span><span class="n">AddParameter</span><span class="p">(</span><span class="s">&quot;somereal&quot;</span><span class="p">,</span> <span class="n">DbType</span><span class="p">.</span><span class="n">String</span><span class="p">);</span>
            <span class="n">target</span><span class="p">.</span><span class="n">AddParameter</span><span class="p">(</span><span class="s">&quot;someint&quot;</span><span class="p">,</span> <span class="n">DbType</span><span class="p">.</span><span class="n">Int32</span><span class="p">);</span>
            <span class="n">target</span><span class="p">.</span><span class="n">AddParameter</span><span class="p">(</span><span class="s">&quot;somedt&quot;</span><span class="p">,</span> <span class="n">DbType</span><span class="p">.</span><span class="n">DateTime</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="kt">long</span> <span class="nf">CountRecords</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">m_countAllCmd</span> <span class="p">=</span> <span class="n">m_dbCon</span><span class="p">.</span><span class="n">CreateCommand</span><span class="p">();</span>
            <span class="n">m_countAllCmd</span><span class="p">.</span><span class="n">CommandText</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="n">m_countAllQuery</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>

            <span class="kt">long</span> <span class="n">ret</span> <span class="p">=</span> <span class="p">(</span><span class="kt">long</span><span class="p">)</span><span class="n">m_countAllCmd</span><span class="p">.</span><span class="n">ExecuteScalar</span><span class="p">();</span>
            <span class="n">m_countAllCmd</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>

            <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="k">void</span> <span class="nf">DeleteRecords</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">m_deleteAllCmd</span> <span class="p">=</span> <span class="n">m_dbCon</span><span class="p">.</span><span class="n">CreateCommand</span><span class="p">();</span>
            <span class="n">m_deleteAllCmd</span><span class="p">.</span><span class="n">CommandText</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="n">m_deleteAllQuery</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>

            <span class="n">m_deleteAllCmd</span><span class="p">.</span><span class="n">ExecuteNonQuery</span><span class="p">();</span>
            <span class="n">m_deleteAllCmd</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="n">SQLiteDataReader</span> <span class="nf">SelectAllRecords</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">m_selectAllCmd</span> <span class="p">=</span> <span class="n">m_dbCon</span><span class="p">.</span><span class="n">CreateCommand</span><span class="p">();</span>
            <span class="n">m_selectAllCmd</span><span class="p">.</span><span class="n">CommandText</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="n">m_selectAllQuery</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>
            <span class="k">return</span> <span class="n">m_selectAllCmd</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">();</span>
        <span class="p">}</span>

<span class="na">        [TestMethod()]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">AddParameterTest</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">SQLiteBulkInsert</span> <span class="n">target</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteBulkInsert</span><span class="p">(</span><span class="n">m_dbCon</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>
            <span class="n">AddParameters</span><span class="p">(</span><span class="n">target</span><span class="p">);</span>

            <span class="kt">string</span> <span class="n">pd</span> <span class="p">=</span> <span class="n">target</span><span class="p">.</span><span class="n">ParamDelimiter</span><span class="p">;</span>
            <span class="kt">string</span> <span class="n">expectedStmnt</span> <span class="p">=</span> <span class="s">&quot;INSERT INTO [{0}] ([somestring], [somereal], [someint], [somedt]) VALUES ({1}somestring, {2}somereal, {3}someint, {4}somedt)&quot;</span><span class="p">;</span>
            <span class="n">expectedStmnt</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="n">expectedStmnt</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">,</span> <span class="n">pd</span><span class="p">,</span> <span class="n">pd</span><span class="p">,</span> <span class="n">pd</span><span class="p">,</span> <span class="n">pd</span><span class="p">);</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="n">expectedStmnt</span><span class="p">,</span> <span class="n">target</span><span class="p">.</span><span class="n">CommandText</span><span class="p">);</span>
        <span class="p">}</span>

<span class="na">        [TestMethod()]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">SQLiteBulkInsertConstructorTest</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">SQLiteBulkInsert</span> <span class="n">target</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteBulkInsert</span><span class="p">(</span><span class="n">m_dbCon</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="n">m_testTableName</span><span class="p">,</span> <span class="n">target</span><span class="p">.</span><span class="n">TableName</span><span class="p">);</span>

            <span class="kt">bool</span> <span class="n">wasException</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
            <span class="k">try</span> <span class="p">{</span>
                <span class="kt">string</span> <span class="n">a</span> <span class="p">=</span> <span class="n">target</span><span class="p">.</span><span class="n">CommandText</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">catch</span> <span class="p">(</span><span class="n">SQLiteException</span> <span class="n">ex</span><span class="p">)</span> <span class="p">{</span> <span class="n">wasException</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span> <span class="p">}</span>

            <span class="n">Assert</span><span class="p">.</span><span class="n">IsTrue</span><span class="p">(</span><span class="n">wasException</span><span class="p">);</span>
        <span class="p">}</span>

<span class="na">        [TestMethod()]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">CommandTextTest</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">SQLiteBulkInsert</span> <span class="n">target</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteBulkInsert</span><span class="p">(</span><span class="n">m_dbCon</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>
            <span class="n">AddParameters</span><span class="p">(</span><span class="n">target</span><span class="p">);</span>

            <span class="kt">string</span> <span class="n">pd</span> <span class="p">=</span> <span class="n">target</span><span class="p">.</span><span class="n">ParamDelimiter</span><span class="p">;</span>
            <span class="kt">string</span> <span class="n">expectedStmnt</span> <span class="p">=</span> <span class="s">&quot;INSERT INTO [{0}] ([somestring], [somereal], [someint], [somedt]) VALUES ({1}somestring, {2}somereal, {3}someint, {4}somedt)&quot;</span><span class="p">;</span>
            <span class="n">expectedStmnt</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="n">expectedStmnt</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">,</span> <span class="n">pd</span><span class="p">,</span> <span class="n">pd</span><span class="p">,</span> <span class="n">pd</span><span class="p">,</span> <span class="n">pd</span><span class="p">);</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="n">expectedStmnt</span><span class="p">,</span> <span class="n">target</span><span class="p">.</span><span class="n">CommandText</span><span class="p">);</span>
        <span class="p">}</span>

<span class="na">        [TestMethod()]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">TableNameTest</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">SQLiteBulkInsert</span> <span class="n">target</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteBulkInsert</span><span class="p">(</span><span class="n">m_dbCon</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="n">m_testTableName</span><span class="p">,</span> <span class="n">target</span><span class="p">.</span><span class="n">TableName</span><span class="p">);</span>
        <span class="p">}</span>

<span class="na">        [TestMethod()]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">InsertTest</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">SQLiteBulkInsert</span> <span class="n">target</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteBulkInsert</span><span class="p">(</span><span class="n">m_dbCon</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>

            <span class="kt">bool</span> <span class="n">didThrow</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
            <span class="k">try</span> <span class="p">{</span>
                <span class="n">target</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="k">new</span> <span class="kt">object</span><span class="p">[]</span> <span class="p">{</span> <span class="s">&quot;hello&quot;</span> <span class="p">});</span> <span class="c1">//object.length must equal the number of parameters added</span>
            <span class="p">}</span>
            <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span> <span class="p">{</span> <span class="n">didThrow</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span> <span class="p">}</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">IsTrue</span><span class="p">(</span><span class="n">didThrow</span><span class="p">);</span>

            <span class="n">AddParameters</span><span class="p">(</span><span class="n">target</span><span class="p">);</span>

            <span class="n">target</span><span class="p">.</span><span class="n">CommitMax</span> <span class="p">=</span> <span class="m">4</span><span class="p">;</span>
            <span class="n">DateTime</span> <span class="n">dt1</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">;</span> <span class="n">DateTime</span> <span class="n">dt2</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">;</span> <span class="n">DateTime</span> <span class="n">dt3</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">;</span> <span class="n">DateTime</span> <span class="n">dt4</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">;</span>
            <span class="n">target</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="k">new</span> <span class="kt">object</span><span class="p">[]</span> <span class="p">{</span> <span class="s">&quot;john&quot;</span><span class="p">,</span> <span class="m">3.45f</span><span class="p">,</span> <span class="m">10</span><span class="p">,</span> <span class="n">dt1</span> <span class="p">});</span>
            <span class="n">target</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="k">new</span> <span class="kt">object</span><span class="p">[]</span> <span class="p">{</span> <span class="s">&quot;paul&quot;</span><span class="p">,</span> <span class="p">-</span><span class="m">0.34f</span><span class="p">,</span> <span class="m">100</span><span class="p">,</span> <span class="n">dt2</span> <span class="p">});</span>
            <span class="n">target</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="k">new</span> <span class="kt">object</span><span class="p">[]</span> <span class="p">{</span> <span class="s">&quot;ringo&quot;</span><span class="p">,</span> <span class="m">1000.98f</span><span class="p">,</span> <span class="m">1000</span><span class="p">,</span> <span class="n">dt3</span> <span class="p">});</span>
            <span class="n">target</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="k">new</span> <span class="kt">object</span><span class="p">[]</span> <span class="p">{</span> <span class="s">&quot;george&quot;</span><span class="p">,</span> <span class="m">5.0f</span><span class="p">,</span> <span class="m">10000</span><span class="p">,</span> <span class="n">dt4</span> <span class="p">});</span>

            <span class="kt">long</span> <span class="n">count</span> <span class="p">=</span> <span class="n">CountRecords</span><span class="p">();</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">4</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>

            <span class="n">SQLiteDataReader</span> <span class="n">reader</span> <span class="p">=</span> <span class="n">SelectAllRecords</span><span class="p">();</span>

            <span class="n">Assert</span><span class="p">.</span><span class="n">IsTrue</span><span class="p">(</span><span class="n">reader</span><span class="p">.</span><span class="n">Read</span><span class="p">());</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="s">&quot;john&quot;</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetString</span><span class="p">(</span><span class="m">1</span><span class="p">));</span> <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">3.45f</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetFloat</span><span class="p">(</span><span class="m">2</span><span class="p">));</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetInt32</span><span class="p">(</span><span class="m">3</span><span class="p">));</span> <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="n">dt1</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetDateTime</span><span class="p">(</span><span class="m">4</span><span class="p">));</span>

            <span class="n">Assert</span><span class="p">.</span><span class="n">IsTrue</span><span class="p">(</span><span class="n">reader</span><span class="p">.</span><span class="n">Read</span><span class="p">());</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="s">&quot;paul&quot;</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetString</span><span class="p">(</span><span class="m">1</span><span class="p">));</span> <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(-</span><span class="m">0.34f</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetFloat</span><span class="p">(</span><span class="m">2</span><span class="p">));</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetInt32</span><span class="p">(</span><span class="m">3</span><span class="p">));</span> <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="n">dt2</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetDateTime</span><span class="p">(</span><span class="m">4</span><span class="p">));</span>

            <span class="n">Assert</span><span class="p">.</span><span class="n">IsTrue</span><span class="p">(</span><span class="n">reader</span><span class="p">.</span><span class="n">Read</span><span class="p">());</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="s">&quot;ringo&quot;</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetString</span><span class="p">(</span><span class="m">1</span><span class="p">));</span> <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">1000.98f</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetFloat</span><span class="p">(</span><span class="m">2</span><span class="p">));</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">1000</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetInt32</span><span class="p">(</span><span class="m">3</span><span class="p">));</span> <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="n">dt3</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetDateTime</span><span class="p">(</span><span class="m">4</span><span class="p">));</span>

            <span class="n">Assert</span><span class="p">.</span><span class="n">IsTrue</span><span class="p">(</span><span class="n">reader</span><span class="p">.</span><span class="n">Read</span><span class="p">());</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="s">&quot;george&quot;</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetString</span><span class="p">(</span><span class="m">1</span><span class="p">));</span> <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">5.0f</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetFloat</span><span class="p">(</span><span class="m">2</span><span class="p">));</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">10000</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetInt32</span><span class="p">(</span><span class="m">3</span><span class="p">));</span> <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="n">dt4</span><span class="p">,</span> <span class="n">reader</span><span class="p">.</span><span class="n">GetDateTime</span><span class="p">(</span><span class="m">4</span><span class="p">));</span>

            <span class="n">Assert</span><span class="p">.</span><span class="n">IsFalse</span><span class="p">(</span><span class="n">reader</span><span class="p">.</span><span class="n">Read</span><span class="p">());</span>

            <span class="n">DeleteRecords</span><span class="p">();</span>

            <span class="n">count</span> <span class="p">=</span> <span class="n">CountRecords</span><span class="p">();</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
        <span class="p">}</span>

<span class="na">        [TestMethod()]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">FlushTest</span><span class="p">()</span> <span class="p">{</span>
            <span class="kt">string</span><span class="p">[]</span> <span class="n">names</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">string</span><span class="p">[]</span> <span class="p">{</span> <span class="s">&quot;metalica&quot;</span><span class="p">,</span> <span class="s">&quot;beatles&quot;</span><span class="p">,</span> <span class="s">&quot;coldplay&quot;</span><span class="p">,</span> <span class="s">&quot;tiesto&quot;</span><span class="p">,</span> <span class="s">&quot;t-pain&quot;</span><span class="p">,</span> <span class="s">&quot;blink 182&quot;</span><span class="p">,</span> <span class="s">&quot;plain white ts&quot;</span><span class="p">,</span> <span class="s">&quot;staind&quot;</span><span class="p">,</span> <span class="s">&quot;pink floyd&quot;</span> <span class="p">};</span>
            <span class="n">Random</span> <span class="n">rand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Random</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">TickCount</span><span class="p">);</span>

            <span class="n">SQLiteBulkInsert</span> <span class="n">target</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteBulkInsert</span><span class="p">(</span><span class="n">m_dbCon</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>
            <span class="n">AddParameters</span><span class="p">(</span><span class="n">target</span><span class="p">);</span>

            <span class="n">target</span><span class="p">.</span><span class="n">CommitMax</span> <span class="p">=</span> <span class="m">1000</span><span class="p">;</span>

            <span class="c1">//Insert less records than commitmax</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="m">50</span><span class="p">;</span> <span class="n">x</span><span class="p">++)</span>
                <span class="n">target</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="k">new</span> <span class="kt">object</span><span class="p">[]</span> <span class="p">{</span> <span class="n">names</span><span class="p">[</span><span class="n">rand</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">names</span><span class="p">.</span><span class="n">Length</span><span class="p">)],</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">rand</span><span class="p">.</span><span class="n">NextDouble</span><span class="p">(),</span> <span class="n">rand</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="m">50</span><span class="p">),</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span> <span class="p">});</span>

            <span class="c1">//Close connect to verify records were not inserted</span>
            <span class="n">m_dbCon</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>

            <span class="n">m_dbCon</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteConnection</span><span class="p">(</span><span class="n">m_connectionString</span><span class="p">);</span>
            <span class="n">m_dbCon</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>

            <span class="kt">long</span> <span class="n">count</span> <span class="p">=</span> <span class="n">CountRecords</span><span class="p">();</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>

            <span class="c1">//Now actually verify flush worked</span>
            <span class="n">target</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteBulkInsert</span><span class="p">(</span><span class="n">m_dbCon</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>
            <span class="n">AddParameters</span><span class="p">(</span><span class="n">target</span><span class="p">);</span>

            <span class="n">target</span><span class="p">.</span><span class="n">CommitMax</span> <span class="p">=</span> <span class="m">1000</span><span class="p">;</span>

            <span class="c1">//Insert less records than commitmax</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="m">50</span><span class="p">;</span> <span class="n">x</span><span class="p">++)</span>
                <span class="n">target</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="k">new</span> <span class="kt">object</span><span class="p">[]</span> <span class="p">{</span> <span class="n">names</span><span class="p">[</span><span class="n">rand</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">names</span><span class="p">.</span><span class="n">Length</span><span class="p">)],</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">rand</span><span class="p">.</span><span class="n">NextDouble</span><span class="p">(),</span> <span class="n">rand</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="m">50</span><span class="p">),</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span> <span class="p">});</span>

            <span class="n">target</span><span class="p">.</span><span class="n">Flush</span><span class="p">();</span>

            <span class="n">count</span> <span class="p">=</span> <span class="n">CountRecords</span><span class="p">();</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">50</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>

            <span class="c1">//Close connect to verify flush worked</span>
            <span class="n">m_dbCon</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>

            <span class="n">m_dbCon</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteConnection</span><span class="p">(</span><span class="n">m_connectionString</span><span class="p">);</span>
            <span class="n">m_dbCon</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>

            <span class="n">count</span> <span class="p">=</span> <span class="n">CountRecords</span><span class="p">();</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">50</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>

            <span class="n">DeleteRecords</span><span class="p">();</span>
            <span class="n">count</span> <span class="p">=</span> <span class="n">CountRecords</span><span class="p">();</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
        <span class="p">}</span>

<span class="na">        [TestMethod()]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">CommitMaxTest</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">SQLiteBulkInsert</span> <span class="n">target</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteBulkInsert</span><span class="p">(</span><span class="n">m_dbCon</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>

            <span class="n">target</span><span class="p">.</span><span class="n">CommitMax</span> <span class="p">=</span> <span class="m">4</span><span class="p">;</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">4</span><span class="p">,</span> <span class="n">target</span><span class="p">.</span><span class="n">CommitMax</span><span class="p">);</span>

            <span class="n">target</span><span class="p">.</span><span class="n">CommitMax</span> <span class="p">=</span> <span class="m">1000</span><span class="p">;</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">AreEqual</span><span class="p">(</span><span class="m">1000</span><span class="p">,</span> <span class="n">target</span><span class="p">.</span><span class="n">CommitMax</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">//SPEED TEST</span>
<span class="na">        [TestMethod()]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">AllowBulkInsertTest</span><span class="p">()</span> <span class="p">{</span>
            <span class="kt">string</span><span class="p">[]</span> <span class="n">names</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">string</span><span class="p">[]</span> <span class="p">{</span> <span class="s">&quot;metalica&quot;</span><span class="p">,</span> <span class="s">&quot;beatles&quot;</span><span class="p">,</span> <span class="s">&quot;coldplay&quot;</span><span class="p">,</span> <span class="s">&quot;tiesto&quot;</span><span class="p">,</span> <span class="s">&quot;t-pain&quot;</span><span class="p">,</span> <span class="s">&quot;blink 182&quot;</span><span class="p">,</span> <span class="s">&quot;plain white ts&quot;</span><span class="p">,</span> <span class="s">&quot;staind&quot;</span><span class="p">,</span> <span class="s">&quot;pink floyd&quot;</span><span class="p">};</span>
            <span class="n">Random</span> <span class="n">rand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Random</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">TickCount</span><span class="p">);</span>

            <span class="n">SQLiteBulkInsert</span> <span class="n">target</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteBulkInsert</span><span class="p">(</span><span class="n">m_dbCon</span><span class="p">,</span> <span class="n">m_testTableName</span><span class="p">);</span>
            <span class="n">AddParameters</span><span class="p">(</span><span class="n">target</span><span class="p">);</span>

            <span class="k">const</span> <span class="kt">int</span> <span class="n">COUNT</span> <span class="p">=</span> <span class="m">100</span><span class="p">;</span>

            <span class="n">target</span><span class="p">.</span><span class="n">CommitMax</span> <span class="p">=</span> <span class="n">COUNT</span><span class="p">;</span>

            <span class="n">DateTime</span> <span class="n">start1</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">;</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">COUNT</span><span class="p">;</span> <span class="n">x</span><span class="p">++)</span>
                <span class="n">target</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="k">new</span> <span class="kt">object</span><span class="p">[]</span> <span class="p">{</span> <span class="n">names</span><span class="p">[</span><span class="n">rand</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">names</span><span class="p">.</span><span class="n">Length</span><span class="p">)],</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">rand</span><span class="p">.</span><span class="n">NextDouble</span><span class="p">(),</span> <span class="n">rand</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">COUNT</span><span class="p">),</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span> <span class="p">});</span>

            <span class="n">DateTime</span> <span class="n">end1</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">;</span>
            <span class="n">TimeSpan</span> <span class="n">delta1</span> <span class="p">=</span> <span class="n">end1</span> <span class="p">-</span> <span class="n">start1</span><span class="p">;</span>

            <span class="n">DeleteRecords</span><span class="p">();</span>

            <span class="n">target</span><span class="p">.</span><span class="n">AllowBulkInsert</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
            <span class="n">DateTime</span> <span class="n">start2</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">;</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">COUNT</span><span class="p">;</span> <span class="n">x</span><span class="p">++)</span>
                <span class="n">target</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="k">new</span> <span class="kt">object</span><span class="p">[]</span> <span class="p">{</span> <span class="n">names</span><span class="p">[</span><span class="n">rand</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">names</span><span class="p">.</span><span class="n">Length</span><span class="p">)],</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">rand</span><span class="p">.</span><span class="n">NextDouble</span><span class="p">(),</span> <span class="n">rand</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">COUNT</span><span class="p">),</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span> <span class="p">});</span>

            <span class="n">DateTime</span> <span class="n">end2</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">;</span>
            <span class="n">TimeSpan</span> <span class="n">delta2</span> <span class="p">=</span> <span class="n">end2</span> <span class="p">-</span> <span class="n">start2</span><span class="p">;</span>

            <span class="c1">//THIS MAY FAIL DEPENDING UPON THE MACHINE THE TEST IS RUNNING ON.</span>
            <span class="n">Assert</span><span class="p">.</span><span class="n">IsTrue</span><span class="p">(</span><span class="n">delta1</span><span class="p">.</span><span class="n">TotalSeconds</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="m">0.1</span><span class="p">);</span> <span class="c1">//approx true for 100 recs             Assert.IsTrue(delta2.TotalSeconds &amp;gt; 1.0); //approx true for 100 recs;</span>

            <span class="c1">//UNCOMMENT THIS TO MAKE IT FAIL AND SEE ACTUAL NUMBERS IN FAILED REPORT</span>
            <span class="c1">//Assert.AreEqual(delta1.TotalSeconds, delta2.TotalSeconds);</span>

            <span class="n">DeleteRecords</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

<p>Enjoy. Drop me a line if you have any problems.</p>
<p>Are you a <a href="http://gitpilot.com">Git</a> user? Let me help you make project
management with Git simple. Checkout <a href="http://gitpilot.com">Gitpilot</a>.</p>
<p>Read my blog on entrepreneurship: <a href="http://techneur.com">Techneur</a> Follow
me on Twitter: <a href="http://twitter.com/jprichardson">@jprichardson</a></p>
<p>-JP</p>


 <div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'procbits'; // required: replace example with your forum shortname

  //optional url
  
    var disqus_url = 'http://procbits.com/2009/09/08/sqlite-bulk-insert/';
  

  //optional id
  

  /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    <span id="footer"><br><span style="font-size: 10px;">Proudly built with<a href="https://github.com/skywrite"> Sky</a></span></span></div>
      </div>
    </div>
    <div class="scripts">  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-35069840-2']);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
    </div>
  </body>
</html>