<!DOCTYPE html>
<title>Read File Contents (Blobs) in GWT and Gears</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="author" content="JP Richardson">
<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/css/bootstrap.min.css" rel="stylesheet" media="screen">
<link href="/assets/css/highlight.css" rel="stylesheet">
<link href="/assets/css/style.css" rel="stylesheet">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/js/bootstrap.min.js"></script>
<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/css/bootstrap-glyphicons.css" rel="stylesheet">
<script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
  
  
  
</script>
<div id="wrap">
  <div class="navbar navbar-default">
    <div class="container">
      <div class="navbar-header">
        <button data-toggle="collapse" data-target=".navbar-collapse" class="navbar-toggle"><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a href="http://procbits.com" class="navbar-brand">procbits</a>
      </div>
      <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav pull-right"> 
          <li><a href="/pages/about">About            </a></li>
          <li><a href="/tags">Tags</a></li>
          <li><a href="/rss.xml">RSS</a></li>
        </ul>
      </div>
    </div>
  </div>
  <div class="container"> <h1>Read File Contents (Blobs) in GWT and Gears</h1>

<p>What do you do if you want to read the contents of a file in your GWT
application? One possible solution is to use Google Gears.</p>
<p>Gears offers a method to allow a user to select file(s). You can then
use the returned &quot;getFiles&quot; method of the &quot;OpenFilesEvent&quot; object to
find out what file(s) the user selected. Each &quot;File&quot; class has a method
called &quot;getBlob&quot; that returns a &quot;Blob&quot; object. However, each blob object
doesn&#39;t provide any direct way to access the blobs contents. Many
<a href="http://www.arcaner.com/2008/09/14/google-gears-blob-hate/">people</a>
<a href="http://groups.google.com/group/gears-users/browse_thread/thread/0b4d3933a1ef0e91?fwc=1">haven&#39;t</a>
found a way to read the blob contents.</p>
<p>I wrote a class to access the contents of the blob. The class is called
&quot;BlobReader&quot; and is very simple to use. The trick lies in the fact that
in Javascript we can access the &quot;getBytes&quot; method of the blob.</p>
<p>Here is an example reading line by line of a text file:</p>
<pre><code>try {
    Desktop dt = Factory.getInstance().createDesktop();
    dt.openFiles(new OpenFilesHandler(){
        public void onOpenFiles(OpenFilesEvent event) {
            File[] files = event.getFiles();
            File file = files[0];
            Blob data = file.getBlob();

            BlobReader br = new BlobReader(data);
            while (!br.endOfBlob())
                Window.alert(br.readLine());
            }
        }, true);
} catch (Exception ex){
    Window.alert(ex.toString());
}</code></pre>
<p>Here is BlobReader.java:</p>
<pre><code>package com.yourpackage.client;
import com.google.gwt.core.client.JsArrayInteger;
import com.google.gwt.gears.client.blob.Blob;

public class BlobReader {

    private final int CHUNK_SIZE = 1024;

    public BlobReader(Blob blob){
        this.blob = blob;
    }

    private Blob blob;
    public Blob getBlob(){ return this.blob; }

    private int blobPointer = 0;
    public int getBlobPointer(){ return this.blobPointer; }

    public boolean endOfBlob(){
        return (blobPointer &gt;= blob.getLength());
    }

    public byte[] readAllBytes(){
        return getBlobBytes(this.blob);
    }

    public String readAllText(){
        int size = this.blob.getLength();
        StringBuilder sb = new StringBuilder(size);

        JsArrayInteger bytes = getBlobBytes(this.blob, 0, size);
        for (int x = 0; x &lt; size; x++)
            sb.append((char)bytes.get(x));

        return sb.toString();
    }

    public String readLine(){
        int size = CHUNK_SIZE;
        boolean foundEndOfLine = false;

        JsArrayInteger bytes;
        StringBuilder sb = new StringBuilder(CHUNK_SIZE);

        while (!foundEndOfLine &amp;&amp; size &gt; 0){
            int dif = this.blob.getLength() - this.blobPointer; //remainder of the data
            if (dif &lt; CHUNK_SIZE)
                size = dif;
            bytes = getBlobBytes(this.blob, this.blobPointer, size);

            for (int x = 0; x &lt; size; x++){
                blobPointer++;
                int b = bytes.get(x);
                if (b == 10){ //newline
                    foundEndOfLine = true;
                    break;
                }
                sb.append((char)b);

                if (this.getBlobPointer() % 1000000 == 0)
                    Window.alert(&quot;&quot; + this.getBlobPointer());
            }
        }

        if (sb.substring(sb.length() - 1) == &quot;\r&quot;)
            sb.deleteCharAt(sb.length() - 1);

        return sb.toString();
    }

       public void reset(){
        this.blobPointer = 0;
    }

    private byte[] getBlobBytes(Blob b){
        JsArrayInteger array = getBlobBytes(b, 0, b.getLength());
        byte[] bytes = new byte[array.length()];
        for (int x = 0; x &lt; bytes.length; x++)
            bytes[x] = (byte) array.get(x); //in google docs we are told these are from 0-255

        return bytes;
    }

    private native JsArrayInteger getBlobBytes(Blob b, int offset, int length) /*-{
        return b.getBytes(offset, length);
    }-*/;
}</code></pre>
<p>Notes: 1) This hasn&#39;t been thoroughly tested/debugged. 2) At the time of
this writing, I&#39;m using Gears 0.5 with the GWT-Gears 1.2.1. In the
current GWT-Gears svn trunk you can see upcoming support for the GWT
methods &quot;getNativeBytes&quot; and &quot;getBytes&quot;</p>


<!--<p>
  If you made it this far, you should follow me on Twitter. &nbsp; <a style="margin-top: -3px" href="https://twitter.com/jprichardson" class="twitter-follow-button" data-show-count="false">Follow @jprichardson</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</p>-->

<p>
If you made it this far, you should <a href="http://twitter.com/jprichardson">follow me on Twitter</a>.
</p>

<p>
  -JP
</p>

<p style="border: 1px solid #ccc; background-color: #f8f8f8; padding: 3px;">
Want to test-drive Bitcoin without any risk? Check out my 
  <a href="https://play.google.com/store/apps/details?id=com.coinbolt.bitcoin">
    bitcoin wallet Coinbolt</a>. It includes test coins for free.
</p>

 <div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'procbits'; // required: replace example with your forum shortname

  //optional url
  
    var disqus_url = 'http://procbits.com/2009/07/29/read-file-contents-blobs-in-gwt-and-gears/';
  

  //optional id
  

  /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    
  </div>
</div>
<div id="footer">
  <div class="container">
    <p class="text-muted credit">Proudly built with<a href="https://github.com/skywrite"> Sky</a></p>
  </div>
</div>
<div class="scripts">  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-35069840-2']);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
</div>