<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Quick JSON Serialization/Deserialization in C#</title>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="JP Richardson">
    <link href="http://netdna.bootstrapcdn.com/bootswatch/2.1.1/spacelab/bootstrap.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/highlight.css" rel="stylesheet">
  </head>
  <body>
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid nav-container">
          <nav role="navigation"><a title="" href="http://procbits.com" class="brand">procbits</a>
            <p class="navbar-text pull-left">source code snippets and other random musings about software</p>
            <ul class="nav pull-right">             
              <li><a href="/tags">Tags</a></li>
              <li><a href="/rss.xml">RSS</a></li>
            </ul>
          </nav><a data-toggle="collapse" data-target=".nav-collapse" href="http://procbits.com" class="btn btn-navbar">procbits<span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></a>
        </div>
      </div>
    </div>
    <div class="container-fluid">
      <div id="content" class="clearfix row-fluid">
        <div id="main" role="main" class="span8 clearfix"><h1>Quick JSON Serialization/Deserialization in C#</h1>

<p><strong>*This outdated*.</strong> You should use <a href="http://procbits.com/2011/08/11/fridaythe13th-the-best-json-parser-for-silverlight-and-net/">FridayThe13th the best JSON
parser for Silverlight and .NET
4.0</a>.</p>
<p>You don&#39;t need to download an <a href="http://json.codeplex.com/">additional
library</a>to serialize/deserialize your objects
to/from JSON. Since .NET 3.5, .NET can do it natively.</p>
<p>Add a reference to your project to &quot;System.Web.Extensions.dll&quot;</p>
<p>Let&#39;s look at this example JSON string:</p>
<div class="highlight"><pre><span class="p">{</span>
    <span class="s2">&quot;some_number&quot;</span><span class="o">:</span> <span class="mf">108.541</span><span class="p">,</span> 
    <span class="s2">&quot;date_time&quot;</span><span class="o">:</span> <span class="s2">&quot;2011-04-13T15:34:09Z&quot;</span><span class="p">,</span> 
    <span class="s2">&quot;serial_number&quot;</span><span class="o">:</span> <span class="s2">&quot;SN1234&quot;</span>
<span class="p">}</span>
</pre></div>

<p>You can deserialize the previous JSON into a dictionary like so:</p>
<div class="highlight"><pre><span class="k">using</span> <span class="nn">System.Web.Script.Serialization</span><span class="p">;</span>

<span class="kt">var</span> <span class="n">jss</span> <span class="p">=</span> <span class="k">new</span> <span class="n">JavaScriptSerializer</span><span class="p">();</span>
<span class="kt">var</span> <span class="n">dict</span> <span class="p">=</span> <span class="n">jss</span><span class="p">.</span><span class="n">Deserialize</span><span class="p">&lt;</span><span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span><span class="kt">string</span><span class="p">&gt;&gt;(</span><span class="n">jsonText</span><span class="p">);</span>

<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">dict</span><span class="p">[</span><span class="s">&quot;some_number&quot;</span><span class="p">]);</span> <span class="c1">//outputs 108.541</span>
</pre></div>

<p>So what if your JSON is a bit more complex?</p>
<div class="highlight"><pre><span class="p">{</span>
    <span class="s2">&quot;some_number&quot;</span><span class="o">:</span> <span class="mf">108.541</span><span class="p">,</span> 
    <span class="s2">&quot;date_time&quot;</span><span class="o">:</span> <span class="s2">&quot;2011-04-13T15:34:09Z&quot;</span><span class="p">,</span> 
    <span class="s2">&quot;serial_number&quot;</span><span class="o">:</span> <span class="s2">&quot;SN1234&quot;</span>
    <span class="s2">&quot;more_data&quot;</span><span class="o">:</span> <span class="p">{</span>
        <span class="s2">&quot;field1&quot;</span><span class="o">:</span> <span class="mf">1.0</span>
        <span class="s2">&quot;field2&quot;</span><span class="o">:</span> <span class="s2">&quot;hello&quot;</span>   
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

<p>Deserialize like so...</p>
<div class="highlight"><pre><span class="k">using</span> <span class="nn">System.Web.Script.Serialization</span><span class="p">;</span>

<span class="kt">var</span> <span class="n">jss</span> <span class="p">=</span> <span class="k">new</span> <span class="n">JavaScriptSerializer</span><span class="p">();</span>
<span class="kt">var</span> <span class="n">dict</span> <span class="p">=</span> <span class="n">jss</span><span class="p">.</span><span class="n">Deserialize</span><span class="p">&lt;</span><span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span><span class="kt">dynamic</span><span class="p">&gt;&gt;(</span><span class="n">jsonText</span><span class="p">);</span>

<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">dict</span><span class="p">[</span><span class="s">&quot;some_number&quot;</span><span class="p">]);</span> <span class="c1">//outputs 108.541</span>
<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">dict</span><span class="p">[</span><span class="s">&quot;more_data&quot;</span><span class="p">][</span><span class="s">&quot;field2&quot;</span><span class="p">]);</span> <span class="c1">//outputs hello</span>
</pre></div>

<p>The field &quot;more_data&quot; gets deserialized into a Dictionary\<string,
object\>.</p>
<p>You can actually just just deserialize like so:</p>
<div class="highlight"><pre><span class="k">using</span> <span class="nn">System.Web.Script.Serialization</span><span class="p">;</span>

<span class="kt">var</span> <span class="n">jss</span> <span class="p">=</span> <span class="k">new</span> <span class="n">JavaScriptSerializer</span><span class="p">();</span>
<span class="kt">var</span> <span class="n">dict</span> <span class="p">=</span> <span class="n">jss</span><span class="p">.</span><span class="n">Deserialize</span><span class="p">&lt;</span><span class="kt">dynamic</span><span class="p">&gt;(</span><span class="n">jsonText</span><span class="p">);</span>

<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">dict</span><span class="p">[</span><span class="s">&quot;some_number&quot;</span><span class="p">]);</span> <span class="c1">//outputs 108.541</span>
<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">dict</span><span class="p">[</span><span class="s">&quot;more_data&quot;</span><span class="p">][</span><span class="s">&quot;field2&quot;</span><span class="p">]);</span> <span class="c1">//outputs hello</span>
</pre></div>

<p>And everything still works the same. The only caveat is that you lose
intellisense by using the &quot;dynamic&quot; data type.</p>
<p>Serialization is just as easy:</p>
<div class="highlight"><pre><span class="k">using</span> <span class="nn">System.Web.Script.Serialization</span><span class="p">;</span>

<span class="kt">var</span> <span class="n">jss</span> <span class="p">=</span> <span class="k">new</span> <span class="n">JavaScriptSerializer</span><span class="p">();</span>
<span class="kt">var</span> <span class="n">dict</span> <span class="p">=</span> <span class="n">jss</span><span class="p">.</span><span class="n">Deserialize</span><span class="p">&lt;</span><span class="kt">dynamic</span><span class="p">&gt;(</span><span class="n">jsonText</span><span class="p">);</span>

<span class="kt">var</span> <span class="n">json</span> <span class="p">=</span> <span class="n">jss</span><span class="p">.</span><span class="n">Serialize</span><span class="p">(</span><span class="n">dict</span><span class="p">);</span>
<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">json</span><span class="p">);</span>
</pre></div>

<p>Outputs... [sourcecode language=&quot;javascript&quot;] { &quot;some_number&quot;: 108.541,
&quot;date_time&quot;: &quot;2011-04-13T15:34:09Z&quot;, &quot;serial_number&quot;: &quot;SN1234&quot;
```</p>
<p>Do you use Git? If so, checkout <a href="http://gitpilot.com">Gitpilot</a> to make
project management and collaborating on projects seamless.</p>
<p>If you made it this far, read my blog on <a href="http://techneur.com">software
entrepreneurship</a> and follow me on Twitter:
<a href="http://twitter.com/jprichardson">@jprichardson</a>.</p>
<p>-JP</p>


 <div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'procbits'; // required: replace example with your forum shortname

  //optional url
  
    var disqus_url = 'http://procbits.com/2011/04/21/quick-json-serializationdeserialization-in-c/';
  

  //optional id
  

  /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    <span id="footer"><br><span style="font-size: 10px;">Proudly built with<a href="https://github.com/skywrite"> Sky</a></span></span></div>
      </div>
    </div>
    <div class="scripts">  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-35069840-2']);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
    </div>
  </body>
</html>