<!DOCTYPE html>
<html lang="en">
  <head>
    <title>FridayThe13th the Best JSON Parser for Silverlight and C#/.NET</title>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="JP Richardson">
    <link href="http://netdna.bootstrapcdn.com/bootswatch/2.1.1/spacelab/bootstrap.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/highlight.css" rel="stylesheet">
  </head>
  <body>
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid nav-container">
          <nav role="navigation"><a title="" href="http://procbits.com" class="brand">procbits</a>
            <p class="navbar-text pull-left">source code snippets and other random musings about software</p>
            <ul class="nav pull-right">             
              <li><a href="/tags">Tags</a></li>
              <li><a href="/rss.xml">RSS</a></li>
            </ul>
          </nav><a data-toggle="collapse" data-target=".nav-collapse" href="http://procbits.com" class="btn btn-navbar">procbits<span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></a>
        </div>
      </div>
    </div>
    <div class="container-fluid">
      <div id="content" class="clearfix row-fluid">
        <div id="main" role="main" class="span8 clearfix"><h1>FridayThe13th the Best JSON Parser for Silverlight and C#/.NET</h1>

<p>Up until a couple of months ago I was writing most of my code using WPF.
Recently, a project came up where Silverlight made more sense to use.
I&#39;d thought that wouldn&#39;t be a problem since I&#39;d just use
<a href="http://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer.aspx">JavaScriptSerializer</a>
<a href="http://procbits.com/2011/04/21/quick-json-serializationdeserialization-in-c/" title="here">wrote about it
[here</a>]
like I did for my WPF project.</p>
<p>Uh oh. It turns out that Silverlight doesn&#39;t have JavaScriptSerializer.
Never fear!
<a href="http://msdn.microsoft.com/en-us/library/system.runtime.serialization.json.datacontractjsonserializer(v=VS.95">DataContractJsonSerializer</a>.aspx)
is here! Or so I thought.</p>
<p>It turns out that if you want to use DataContractJsonSerializer you must
actually create POCOs to backup this &quot;data contract.&quot; I didn&#39;t want to
do that.</p>
<p>I wanted to turn this...</p>
<div class="highlight"><pre><span class="p">{</span>
    <span class="s2">&quot;some_number&quot;</span><span class="o">:</span> <span class="mf">108.541</span><span class="p">,</span>
    <span class="s2">&quot;date_time&quot;</span><span class="o">:</span> <span class="s2">&quot;2011-04-13T15:34:09Z&quot;</span><span class="p">,</span>
    <span class="s2">&quot;serial_number&quot;</span><span class="o">:</span> <span class="s2">&quot;SN1234&quot;</span>
    <span class="s2">&quot;more_data&quot;</span><span class="o">:</span> <span class="p">{</span>
        <span class="s2">&quot;field1&quot;</span><span class="o">:</span> <span class="mf">1.0</span>
        <span class="s2">&quot;field2&quot;</span><span class="o">:</span> <span class="s2">&quot;hello&quot;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

<p>into..</p>
<div class="highlight"><pre><span class="k">using</span> <span class="nn">System.Web.Script.Serialization</span><span class="p">;</span>

<span class="kt">var</span> <span class="n">jss</span> <span class="p">=</span> <span class="k">new</span> <span class="n">JavaScriptSerializer</span><span class="p">();</span>
<span class="kt">var</span> <span class="n">dict</span> <span class="p">=</span> <span class="n">jss</span><span class="p">.</span><span class="n">Deserialize</span><span class="p">&lt;</span><span class="kt">dynamic</span><span class="p">&gt;(</span><span class="n">jsonText</span><span class="p">);</span>

<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">dict</span><span class="p">[</span><span class="s">&quot;some_number&quot;</span><span class="p">]);</span> <span class="c1">//outputs 108.541</span>
<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">dict</span><span class="p">[</span><span class="s">&quot;more_data&quot;</span><span class="p">][</span><span class="s">&quot;field2&quot;</span><span class="p">]);</span> <span class="c1">//outputs hello</span>
</pre></div>

<p>So I set out to write my own JSON parser. I call it FridayThe13th... how
fitting huh? Now, using either Silverlight or .NET 4.0, you can parse
the previous JSON into the following:</p>
<div class="highlight"><pre><span class="k">using</span> <span class="nn">FridayThe13th</span><span class="p">;</span>

<span class="kt">var</span> <span class="n">jsonText</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="n">ReadAllText</span><span class="p">(</span><span class="s">&quot;mydata.json&quot;</span><span class="p">);</span>

<span class="kt">var</span> <span class="n">jsp</span> <span class="p">=</span> <span class="k">new</span> <span class="n">JsonParser</span><span class="p">(){</span><span class="n">CamelizeProperties</span> <span class="p">=</span> <span class="k">true</span><span class="p">};</span>
<span class="kt">dynamic</span> <span class="n">json</span> <span class="p">=</span> <span class="n">jsp</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">jsonText</span><span class="p">);</span>

<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">json</span><span class="p">.</span><span class="n">SomeNumber</span><span class="p">);</span> <span class="c1">//outputs 108.541</span>
<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">json</span><span class="p">.</span><span class="n">MoreData</span><span class="p">.</span><span class="n">Field2</span><span class="p">);</span> <span class="c1">//outputs hello</span>
</pre></div>

<p>Since I work with a lot of Ruby on Rails backends, I want to add a
property &quot;CamelizeProperties&quot; to turn &quot;some_number&quot; into
&quot;SomeNumber&quot;... it&#39;s more .NET like.</p>
<p>Try it! You can find it on
<a href="https://github.com/jprichardson/FridayThe13th">Github</a>. Oh yeah... it&#39;s
also faster than that <a href="http://json.codeplex.com/">other .NET JSON
library</a> that everyone uses.</p>
<p>Are you a <a href="http://gitpilot.com">Git</a> user? Let me help you make project
management with Git simple. Checkout <a href="http://gitpilot.com">Gitpilot</a>.</p>
<p>If you made it this far, read my blog on <a href="http://techneur.com">software
entrepreneurship</a> and follow me on Twitter:
<a href="http://twitter.com/jprichardson">@jprichardson</a>.</p>
<p>-JP</p>


<p>
  If you made it this far, you should follow me on Twitter. &nbsp; <a style="margin-top: -3px" href="https://twitter.com/jprichardson" class="twitter-follow-button" data-show-count="false">Follow @jprichardson</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</p>

<p>
  -JP
</p>

 <div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'procbits'; // required: replace example with your forum shortname

  //optional url
  
    var disqus_url = 'http://procbits.com/2011/08/11/fridaythe13th-the-best-json-parser-for-silverlight-and-net/';
  

  //optional id
  

  /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    <span id="footer"><br><span style="font-size: 10px;">Proudly built with<a href="https://github.com/skywrite"> Sky</a></span></span></div>
      </div>
    </div>
    <div class="scripts">  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-35069840-2']);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
    </div>
  </body>
</html>