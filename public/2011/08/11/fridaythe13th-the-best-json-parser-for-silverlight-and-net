<!DOCTYPE html>
<html lang="en">
  <head>
    <title>FridayThe13th the Best JSON Parser for Silverlight and C#/.NET</title>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="JP">
    <mete name="description" content="">

    <link href="http://netdna.bootstrapcdn.com/bootswatch/2.1.1/spacelab/bootstrap.min.css" rel="stylesheet">
    <link href="/vendor/highlight.js/styles/vs.css" rel="stylesheet">
    <!--<link href="style.css" rel="stylesheet">-->

    <style>
      body {
        padding-top: 60px; /* 60px to make the container go all the way to the bottom of the topbar */
      }
    </style>

    <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

      <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', ]);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
  </head>
  <body>
    
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid nav-container">
          <nav role="navigation">
            <a class="brand" title="" href="http://procbits.com">procbits</a>
            
            <p class="navbar-text pull-left">
              source code snippets and other random musings about software
            </p>
          </nav>

            <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </a>



        </div>
      </div>
    </div>


    <div class="container-fluid">
      <div id="content" class="clearfix row-fluid">
        <div id="main" class="span8 clearfix" role="main">


<h1>FridayThe13th the Best JSON Parser for Silverlight and C#/.NET</h1>
<p>Up until a couple of months ago I was writing most of my code using WPF.
Recently, a project came up where Silverlight made more sense to use.
I&#39;d thought that wouldn&#39;t be a problem since I&#39;d just use
<a href="http://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer.aspx">JavaScriptSerializer</a>
<a href="http://procbits.com/2011/04/21/quick-json-serializationdeserialization-in-c/" title="here">wrote about it
[here</a>]
like I did for my WPF project.</p>
<p>Uh oh. It turns out that Silverlight doesn&#39;t have JavaScriptSerializer.
Never fear!
<a href="http://msdn.microsoft.com/en-us/library/system.runtime.serialization.json.datacontractjsonserializer(v=VS.95">DataContractJsonSerializer</a>.aspx)
is here! Or so I thought.</p>
<p>It turns out that if you want to use DataContractJsonSerializer you must
actually create POCOs to backup this &quot;data contract.&quot; I didn&#39;t want to
do that.</p>
<p>I wanted to turn this...</p>
<pre><code class="lang-javascript">{
    &quot;some_number&quot;: 108.541,
    &quot;date_time&quot;: &quot;2011-04-13T15:34:09Z&quot;,
    &quot;serial_number&quot;: &quot;SN1234&quot;
    &quot;more_data&quot;: {
        &quot;field1&quot;: 1.0
        &quot;field2&quot;: &quot;hello&quot;
    }
}</code></pre>
<p>into..</p>
<pre><code class="lang-csharp">using System.Web.Script.Serialization;

<span class="keyword">var</span> jss = <span class="keyword">new</span> JavaScriptSerializer();
<span class="keyword">var</span> dict = jss.Deserialize&lt;dynamic>(jsonText);

Console.WriteLine(dict[<span class="string">"some_number"</span>]); <span class="comment">//outputs 108.541</span>
Console.WriteLine(dict[<span class="string">"more_data"</span>][<span class="string">"field2"</span>]); <span class="comment">//outputs hello</span></code></pre>
<p>So I set out to write my own JSON parser. I call it FridayThe13th... how
fitting huh? Now, using either Silverlight or .NET 4.0, you can parse
the previous JSON into the following:</p>
<pre><code class="lang-csharp">using FridayThe13th;

<span class="keyword">var</span> jsonText = File.ReadAllText(<span class="string">"mydata.json"</span>);

<span class="keyword">var</span> jsp = <span class="keyword">new</span> JsonParser(){CamelizeProperties = <span class="keyword">true</span>};
dynamic json = jsp.Parse(jsonText);

Console.WriteLine(json.SomeNumber); <span class="comment">//outputs 108.541</span>
Console.WriteLine(json.MoreData.Field2); <span class="comment">//outputs hello</span></code></pre>
<p>Since I work with a lot of Ruby on Rails backends, I want to add a
property &quot;CamelizeProperties&quot; to turn &quot;some_number&quot; into
&quot;SomeNumber&quot;... it&#39;s more .NET like.</p>
<p>Try it! You can find it on
<a href="https://github.com/jprichardson/FridayThe13th">Github</a>. Oh yeah... it&#39;s
also faster than that <a href="http://json.codeplex.com/">other .NET JSON
library</a> that everyone uses.</p>
<p>Are you a <a href="http://gitpilot.com">Git</a> user? Let me help you make project
management with Git simple. Checkout <a href="http://gitpilot.com">Gitpilot</a>.</p>
<p>If you made it this far, read my blog on <a href="http://techneur.com">software
entrepreneurship</a> and follow me on Twitter:
<a href="http://twitter.com/jprichardson">@jprichardson</a>.</p>
<p>-JP</p>



          <span id="footer">
            <br/>
            <span style="font-size: 10px">
              Proudly built with <a href="{{sky.homepage}}">Sky</a>.
            </span>
          </span>
        </div>
      </div>
    </div>
    
  </body>
</html>
