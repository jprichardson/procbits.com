<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Node.js Exec Like Ruby Exec and Writing a Node.js Native Add On Module</title>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="JP Richardson">
    <link href="http://netdna.bootstrapcdn.com/bootswatch/2.1.1/spacelab/bootstrap.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/highlight.css" rel="stylesheet">
  </head>
  <body>
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid nav-container">
          <nav role="navigation"><a title="" href="http://procbits.com" class="brand">procbits</a>
            <p class="navbar-text pull-left">source code snippets and other random musings about software</p>
            <ul class="nav pull-right">             
              <li><a href="/tags">Tags</a></li>
              <li><a href="/rss.xml">RSS</a></li>
            </ul>
          </nav><a data-toggle="collapse" data-target=".nav-collapse" href="http://procbits.com" class="btn btn-navbar">procbits<span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></a>
        </div>
      </div>
    </div>
    <div class="container-fluid">
      <div id="content" class="clearfix row-fluid">
        <div id="main" role="main" class="span8 clearfix"><h1>Node.js Exec Like Ruby Exec and Writing a Node.js Native Add On Module</h1>

<p>Recently, I was faced with a problem that required my Node.js programs
process to execute another process and have the procoess that&#39;s passed
to the exec function completely replace the Node.js process. In short, I
wanted an &#39;exec&#39; function like Ruby&#39;s &#39;exec&#39; function. Unfortunately,
out of the box, Node.js doesn&#39;t support this functionality. I asked on
<a href="http://stackoverflow.com/questions/8362181/like-ruby-exec-but-for-node-js">Stackoverflow.com, and someone had a
response</a>
that I should use the <a href="http://linux.die.net/man/3/exec">POSIX exec
functions</a> to solve my problem and to
consider writing a native Node.js extension.</p>
<p><code>npm install kexec</code></p>
<p>You can then use it like:</p>
<div class="highlight"><pre><span class="kd">var</span> <span class="nx">kexec</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;kexec&#39;</span><span class="p">);</span>
<span class="nx">kexec</span><span class="p">(</span><span class="s1">&#39;top&#39;</span><span class="p">);</span> <span class="c1">//you can pass any process that you want here</span>
</pre></div>

<p>Here is the C++ source for Node Kexec:</p>
<div class="highlight"><pre><span class="cp">#include &lt;v8.h&gt;</span>
<span class="cp">#include &lt;node.h&gt;</span>
<span class="cp">#include &lt;cstdio&gt;</span>

<span class="c1">//#ifdef __POSIX__</span>
<span class="cp">#include &lt;unistd.h&gt;</span>
<span class="cm">/*#else</span>
<span class="cm">#include &lt;process.h&gt;</span>
<span class="cm">#endif*/</span>

<span class="k">using</span> <span class="k">namespace</span> <span class="n">node</span><span class="p">;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">v8</span><span class="p">;</span>

<span class="k">static</span> <span class="n">Handle</span><span class="o">&lt;</span><span class="n">Value</span><span class="o">&gt;</span> <span class="n">kexec</span><span class="p">(</span><span class="k">const</span> <span class="n">Arguments</span><span class="o">&amp;</span> <span class="n">args</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">String</span><span class="o">::</span><span class="n">Utf8Value</span> <span class="n">v8str</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
    <span class="kt">char</span><span class="o">*</span> <span class="n">argv2</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span><span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;-c&quot;</span><span class="p">,</span> <span class="o">*</span><span class="n">v8str</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">};</span>

    <span class="n">execvp</span><span class="p">(</span><span class="s">&quot;/bin/sh&quot;</span><span class="p">,</span> <span class="n">argv2</span><span class="p">);</span>      
    <span class="k">return</span> <span class="n">Undefined</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="p">{</span>
    <span class="k">static</span> <span class="kt">void</span> <span class="n">init</span> <span class="p">(</span><span class="n">Handle</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">target</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">NODE_SET_METHOD</span><span class="p">(</span><span class="n">target</span><span class="p">,</span> <span class="s">&quot;kexec&quot;</span><span class="p">,</span> <span class="n">kexec</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">NODE_MODULE</span><span class="p">(</span><span class="n">kexec</span><span class="p">,</span> <span class="n">init</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>

<p>As you can see, writing a C++ add on in Node.js isn&#39;t too difficult. You
can use it in your Node.js Javascript like so:</p>
<div class="highlight"><pre><span class="kd">var</span> <span class="nx">kexec</span><span class="p">;</span>

<span class="k">try</span> <span class="p">{</span>
  <span class="nx">kexec</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&quot;./build/default/kexec.node&quot;</span><span class="p">);</span> <span class="c1">//Node.js v0.4</span>
<span class="p">}</span> <span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">kexec</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&quot;./build/Release/kexec.node&quot;</span><span class="p">);</span> <span class="c1">//Node.js v0.6</span>
<span class="p">}</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">kexec</span><span class="p">.</span><span class="nx">kexec</span><span class="p">;</span> <span class="c1">//function of kexec module is named kexec</span>
</pre></div>

<p>Don&#39;t forget your wscript file, which ironically is Python code:</p>
<div class="highlight"><pre><span class="k">def</span> <span class="nf">set_options</span><span class="p">(</span><span class="n">opt</span><span class="p">):</span>
  <span class="n">opt</span><span class="o">.</span><span class="n">tool_options</span><span class="p">(</span><span class="s">&quot;compiler_cxx&quot;</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">configure</span><span class="p">(</span><span class="n">conf</span><span class="p">):</span>
  <span class="n">conf</span><span class="o">.</span><span class="n">check_tool</span><span class="p">(</span><span class="s">&quot;compiler_cxx&quot;</span><span class="p">)</span>
  <span class="n">conf</span><span class="o">.</span><span class="n">check_tool</span><span class="p">(</span><span class="s">&quot;node_addon&quot;</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">build</span><span class="p">(</span><span class="n">bld</span><span class="p">):</span>
  <span class="n">obj</span> <span class="o">=</span> <span class="n">bld</span><span class="o">.</span><span class="n">new_task_gen</span><span class="p">(</span><span class="s">&quot;cxx&quot;</span><span class="p">,</span> <span class="s">&quot;shlib&quot;</span><span class="p">,</span> <span class="s">&quot;node_addon&quot;</span><span class="p">)</span> 
  <span class="n">obj</span><span class="o">.</span><span class="n">cxxflags</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;-g&quot;</span><span class="p">,</span> <span class="s">&quot;-D_FILE_OFFSET_BITS=64&quot;</span><span class="p">,</span> <span class="s">&quot;-D_LARGEFILE_SOURCE&quot;</span><span class="p">,</span><span class="s">&quot;-Wall&quot;</span><span class="p">]</span>
  <span class="n">obj</span><span class="o">.</span><span class="n">target</span> <span class="o">=</span> <span class="s">&quot;kexec&quot;</span>
  <span class="n">obj</span><span class="o">.</span><span class="n">source</span> <span class="o">=</span> <span class="s">&quot;src/node_kexec.cpp&quot;</span>
</pre></div>

<p>In your package.json, include this bit:</p>
<div class="highlight"><pre><span class="s2">&quot;scripts&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;install&quot;</span><span class="o">:</span> <span class="s2">&quot;node-waf configure build&quot;</span> <span class="p">}</span>
</pre></div>

<p>Github Sourcecode: <a href="https://github.com/jprichardson/node-kexec">Node.js kernel
exec</a></p>
<p>I&#39;ve also included other resources for writing a Node.js Native Add On
Module:</p>
<ol>
<li><a href="http://code.google.com/apis/v8/get_started.html">Google V8 Engine Getting
Started</a></li>
<li><a href="http://code.google.com/apis/v8/embed.html">Google V8 Embedder&#39;s
Guide</a></li>
<li><a href="http://syskall.com/how-to-roll-out-your-own-javascript-api-with">How to Roll Your Own Javascript API with
V8</a></li>
<li><a href="http://syskall.com/how-to-write-your-own-native-nodejs-extension">How to Write Your Own Native Node.js
Extension</a></li>
<li><a href="https://www.cloudkick.com/blog/2010/aug/23/writing-nodejs-native-extensions/">Writing Node.js Native
Extensions</a></li>
<li><a href="http://odoe.net/blog/?p=168">Node.js Native Extension with Hammer and a
Prayer</a></li>
<li><a href="http://www.ipreferjim.com/2011/04/node-js-mastering-node-excerpt-addons/">Mastering Node; Add
Ons</a></li>
<li><a href="http://nodejs.org/docs/v0.6.4/api/addons.html">Node.js Documentation: Add
Ons</a></li>
<li><a href="https://github.com/ry/node_postgres">Postgres Node.js Module</a></li>
<li><a href="http://v8.googlecode.com/svn/trunk/samples/shell.cc">V8 Sample:
shell.cc</a></li>
<li><a href="http://create.tpsitulsa.com/blog/2009/01/29/v8-objects/">V8
Objects</a></li>
<li><a href="http://nikhilm.bitbucket.org/articles/c_in_my_javascript/c_in_javascript_part_2.html">There&#39;s C in My
JavaScript</a></li>
<li><a href="http://stackoverflow.com/questions/7476145/converting-from-v8arguments-to-c-types">Converting V8 Arguments to C++
Types</a></li>
</ol>
<p>Do you use Git? If so, checkout <a href="http://gitpilot.com">Gitpilot</a> to make
using Git easy.</p>
<p>Follow me on Twitter: <a href="http://twitter.com/jprichardson">@jprichardson</a>
and read my blog on entrepreneurship: <a href="http://techneur.com">Techneur</a>.</p>
<p>-JP Richardson</p>


<p>
  If you made it this far, you should follow me on Twitter. &nbsp; <a style="margin-top: -3px" href="https://twitter.com/jprichardson" class="twitter-follow-button" data-show-count="false">Follow @jprichardson</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</p>

<p>
  -JP
</p>

 <div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'procbits'; // required: replace example with your forum shortname

  //optional url
  
    var disqus_url = 'http://procbits.com/2011/12/04/node-js-exec-like-ruby-exec-and-writing-a-node-js-native-add-on-module/';
  

  //optional id
  

  /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    <span id="footer"><br><span style="font-size: 10px;">Proudly built with<a href="https://github.com/skywrite"> Sky</a></span></span></div>
      </div>
    </div>
    <div class="scripts">  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-35069840-2']);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
    </div>
  </body>
</html>