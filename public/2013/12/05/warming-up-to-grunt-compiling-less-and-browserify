<!DOCTYPE html>
<title>Warming Up To Grunt: Compiling Less and Browserify</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="author" content="JP Richardson">
<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/css/bootstrap.min.css" rel="stylesheet" media="screen">
<link href="/assets/css/highlight.css" rel="stylesheet">
<link href="/assets/css/style.css" rel="stylesheet">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/js/bootstrap.min.js"></script>
<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/css/bootstrap-glyphicons.css" rel="stylesheet">
<script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
  
  
  
</script>
<div id="wrap">
  <div class="navbar navbar-default">
    <div class="container">
      <div class="navbar-header">
        <button data-toggle="collapse" data-target=".navbar-collapse" class="navbar-toggle"><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a href="http://procbits.com" class="navbar-brand">procbits</a>
      </div>
      <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav pull-right"> 
          <li><a href="/pages/about">About            </a></li>
          <li><a href="/tags">Tags</a></li>
          <li><a href="/rss.xml">RSS</a></li>
        </ul>
      </div>
    </div>
  </div>
  <div class="container"> <h1>Warming Up To Grunt: Compiling Less and Browserify</h1>

<p>I use to hate <a href="http://gruntjs.com/">Grunt</a>. No, I actually use to loath Grunt. I couldn&#39;t understand why anyone would want to use it over something so simple as a Makefile. I&#39;d rather gouge my eyes out with a spoon than look at a Gruntfile. I hate CoffeeScript too, (forgive all the hate, please don&#39;t think of me like a Sith Lord of programming) but CoffeeScript at least makes Grunt a little easier on the eyes.</p>
<p>When I started using <a href="https://github.com/substack/node-browserify">Browserify</a> and <a href="http://lesscss.org/">Less</a> I needed a way to recompile the changes. So I like a good little *nix developer, I made Make tasks:</p>
<p><strong>Makefile</strong>:</p>
<div class="highlight"><pre><span class="nf">client-js</span><span class="o">:</span>
    browserify js/app.js -o build/bundle.js

<span class="nf">client-css</span><span class="o">:</span>
    lessc css/app.less css/app.css 

<span class="nf">.PHONY</span><span class="o">:</span> <span class="m">client-js client-css</span>
</pre></div>

<p>It got really annoying typing <code>make client-js</code> or <code>make client-css</code> after everytime I changed my JavaScript of less source. I needed something to watch my files and recompile the changes.</p>
<p>Enter Grunt.</p>
<p>Here is a <a href="http://gruntjs.com/getting-started">sample Gruntfile</a>:</p>
<div class="highlight"><pre><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>

  <span class="c1">// Project configuration.</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
    <span class="nx">pkg</span><span class="o">:</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">readJSON</span><span class="p">(</span><span class="s1">&#39;package.json&#39;</span><span class="p">),</span>
    <span class="nx">uglify</span><span class="o">:</span> <span class="p">{</span>
      <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
        <span class="nx">banner</span><span class="o">:</span> <span class="s1">&#39;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;yyyy-mm-dd&quot;) %&gt; */\n&#39;</span>
      <span class="p">},</span>
      <span class="nx">build</span><span class="o">:</span> <span class="p">{</span>
        <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;src/&lt;%= pkg.name %&gt;.js&#39;</span><span class="p">,</span>
        <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;build/&lt;%= pkg.name %&gt;.min.js&#39;</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">});</span>

  <span class="c1">// Load the plugin that provides the &quot;uglify&quot; task.</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-contrib-uglify&#39;</span><span class="p">);</span>

  <span class="c1">// Default task(s).</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;uglify&#39;</span><span class="p">]);</span>

<span class="p">};</span>
</pre></div>

<p>Text vomit to me, ick.</p>
<div class="highlight"><pre><span class="nv">module.exports = </span><span class="nf">(grunt) -&gt;</span>

  <span class="c1"># Project configuration.</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span>
    <span class="nv">pkg: </span><span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">readJSON</span><span class="p">(</span><span class="s">&quot;package.json&quot;</span><span class="p">)</span>
    <span class="nv">uglify:</span>
      <span class="nv">options:</span>
        <span class="nv">banner: </span><span class="s">&#39;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;yyyy-mm-dd&quot;) %&gt; */\n&#39;</span>

      <span class="nv">build:</span>
        <span class="nv">src: </span><span class="s">&quot;src/&lt;%= pkg.name %&gt;.js&quot;</span>
        <span class="nv">dest: </span><span class="s">&quot;build/&lt;%= pkg.name %&gt;.min.js&quot;</span>


  <span class="c1"># Load the plugin that provides the &quot;uglify&quot; task.</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span> <span class="s">&quot;grunt-contrib-uglify&quot;</span>

  <span class="c1"># Default task(s).</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span> <span class="s">&quot;default&quot;</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;uglify&quot;</span><span class="p">]</span>
</pre></div>

<p>As stated, I pretty much hate CoffeeScript despite the fact that I wrote <a href="http://procbits.com/2012/05/18/why-do-all-the-great-node-js-developers-hate-coffeescript">this</a>. (I might just go invent a time-machine so that I can go back in time and give a round house kick to the face of JP past.) But at least it looks a little better.</p>
<h2 id="grunt-with-browserify">Grunt with Browserify</h2>
<p>First, you should install the Grunt task runner:</p>
<pre><code>[sudo] npm install -g grunt-cli</code></pre>
<p>install the grunt browserify package:</p>
<pre><code>npm install --save-dev grunt-browserify</code></pre>
<p>that&#39;s it.</p>
<p>Let&#39;s create a simple JS file that will act as our browser side JavaScript:</p>
<pre><code>mkdir www
touch www/app.js</code></pre>
<p>Now let&#39;s create our gruntfile <code>Gruntfile.js</code>:</p>
<div class="highlight"><pre><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
    <span class="nx">pkg</span><span class="o">:</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">readJSON</span><span class="p">(</span><span class="s1">&#39;package.json&#39;</span><span class="p">),</span>
    <span class="nx">browserify</span><span class="o">:</span> <span class="p">{</span>
      <span class="nx">js</span><span class="o">:</span> <span class="p">{</span>
        <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;./www/app.js&#39;</span><span class="p">,</span>
        <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;./www/bundle.js&#39;</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">})</span>

  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-browserify&#39;</span><span class="p">)</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;browserify&#39;</span><span class="p">])</span>
<span class="p">}</span>
</pre></div>

<p>now run the task:</p>
<pre><code>grunt browserify</code></pre>
<p>and you&#39;ll notice that <code>./www/bundle.js</code> has been created. But that&#39;s not much better than creating a Makefile. Arguably worse.</p>
<h2 id="grunt-with-watch">Grunt with Watch</h2>
<p>What would really be useful is to save a file and then have Grunt call browserify to recompile it. </p>
<p>Install the following npm package:</p>
<pre><code>npm install --save-dev grunt-contrib-watch</code></pre>
<p>modify your grunt file to look like:</p>
<div class="highlight"><pre><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
    <span class="nx">pkg</span><span class="o">:</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">readJSON</span><span class="p">(</span><span class="s1">&#39;package.json&#39;</span><span class="p">),</span>
    <span class="nx">watch</span><span class="o">:</span> <span class="p">{</span>
      <span class="nx">js</span><span class="o">:</span> <span class="p">{</span>
        <span class="nx">files</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;www/**/*.js&#39;</span><span class="p">],</span>
        <span class="nx">tasks</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;browserify&#39;</span><span class="p">]</span>
      <span class="p">}</span>
    <span class="p">},</span>
    <span class="nx">browserify</span><span class="o">:</span> <span class="p">{</span>
      <span class="nx">js</span><span class="o">:</span> <span class="p">{</span>
        <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;./www/app.js&#39;</span><span class="p">,</span>
        <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;./www/bundle.js&#39;</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">})</span>

  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-contrib-watch&#39;</span><span class="p">)</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-browserify&#39;</span><span class="p">)</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;watch&#39;</span><span class="p">,</span> <span class="s1">&#39;browserify&#39;</span><span class="p">])</span>
<span class="p">}</span>
</pre></div>

<p>now run the task:</p>
<pre><code>grunt watch</code></pre>
<p>and if you modify <code>./www/app.js</code> and save it, you&#39;ll notice browserify will automatically run!</p>
<h2 id="grunt-with-less">Grunt with Less</h2>
<p>Now let&#39;s say that you want the same behavior with Less. Install:</p>
<pre><code>npm install --save-dev grunt-contrib-less</code></pre>
<p>create your less file:</p>
<pre><code>touch www/app.less</code></pre>
<p>modify your gruntfile:</p>
<div class="highlight"><pre><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
    <span class="nx">pkg</span><span class="o">:</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">readJSON</span><span class="p">(</span><span class="s1">&#39;package.json&#39;</span><span class="p">),</span>
    <span class="nx">watch</span><span class="o">:</span> <span class="p">{</span>
      <span class="nx">js</span><span class="o">:</span> <span class="p">{</span>
        <span class="nx">files</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;www/**/*.js&#39;</span><span class="p">],</span>
        <span class="nx">tasks</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;browserify&#39;</span><span class="p">]</span>
      <span class="p">},</span>
      <span class="nx">css</span><span class="o">:</span> <span class="p">{</span>
        <span class="nx">files</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;www/**/*.less&#39;</span><span class="p">],</span>
        <span class="nx">tasks</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;less&#39;</span><span class="p">]</span>
      <span class="p">}</span>
    <span class="p">},</span>
    <span class="nx">browserify</span><span class="o">:</span> <span class="p">{</span>
      <span class="nx">js</span><span class="o">:</span> <span class="p">{</span>
        <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;./www/app.js&#39;</span><span class="p">,</span>
        <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;./www/bundle.js&#39;</span>
      <span class="p">}</span>
    <span class="p">},</span>
    <span class="nx">less</span><span class="o">:</span> <span class="p">{</span>
      <span class="nx">development</span><span class="o">:</span> <span class="p">{</span>
        <span class="nx">files</span><span class="o">:</span> <span class="p">{</span><span class="s1">&#39;./www/app.css&#39;</span><span class="o">:</span> <span class="s1">&#39;./www/app.less&#39;</span><span class="p">}</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">})</span>

  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-contrib-watch&#39;</span><span class="p">)</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-browserify&#39;</span><span class="p">)</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-contrib-less&#39;</span><span class="p">)</span>
  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;watch&#39;</span><span class="p">,</span> <span class="s1">&#39;browserify&#39;</span><span class="p">,</span> <span class="s1">&#39;less&#39;</span><span class="p">])</span>
<span class="p">}</span>
</pre></div>

<p>Now modify <code>www/app.less</code> and save it. You&#39;ll see <code>www/app.css</code> update accordingly.</p>
<h2 id="conclusion">Conclusion</h2>
<p>I don&#39;t love Grunt yet, but I&#39;m definitely warming up to the idea of having it as another tool in my developer arsenal.</p>


<!--<p>
  If you made it this far, you should follow me on Twitter. &nbsp; <a style="margin-top: -3px" href="https://twitter.com/jprichardson" class="twitter-follow-button" data-show-count="false">Follow @jprichardson</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</p>-->

<p>
If you made it this far, you should <a href="http://twitter.com/jprichardson">follow me on Twitter</a>.
</p>

<p>
  -JP
</p>

<p style="border: 1px solid #ccc; background-color: #f8f8f8; padding: 3px;">
Want to test-drive Bitcoin without any risk? Check out my 
  <a href="https://play.google.com/store/apps/details?id=com.coinbolt.bitcoin">
    bitcoin wallet Coinbolt</a>. It includes test coins for free.
</p>

 <div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'procbits'; // required: replace example with your forum shortname

  //optional url
  
    var disqus_url = 'http://procbits.com/2013/12/05/warming-up-to-grunt-compiling-less-and-browserify/';
  

  //optional id
  

  /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    
  </div>
</div>
<div id="footer">
  <div class="container">
    <p class="text-muted credit">Proudly built with<a href="https://github.com/skywrite"> Sky</a></p>
  </div>
</div>
<div class="scripts">  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-35069840-2']);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
</div>