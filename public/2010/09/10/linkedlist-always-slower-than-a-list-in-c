<!DOCTYPE html>
<html lang="en">
  <head>
    <title>LinkedList Always Slower than a List in C#?</title>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="JP">
    <mete name="description" content="">

    <link href="http://netdna.bootstrapcdn.com/bootswatch/2.1.1/spacelab/bootstrap.min.css" rel="stylesheet">
    <link href="/vendor/highlight.js/styles/vs.css" rel="stylesheet">
    <!--<link href="style.css" rel="stylesheet">-->

    <style>
      body {
        padding-top: 60px; /* 60px to make the container go all the way to the bottom of the topbar */
      }
    </style>

    <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

      <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', ]);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
  </head>
  <body>
    
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid nav-container">
          <nav role="navigation">
            <a class="brand" title="" href="http://procbits.com">procbits</a>
            
            <p class="navbar-text pull-left">
              source code snippets and other random musings about software
            </p>
          </nav>

            <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </a>



        </div>
      </div>
    </div>


    <div class="container-fluid">
      <div id="content" class="clearfix row-fluid">
        <div id="main" class="span8 clearfix" role="main">


<h1>LinkedList Always Slower than a List in C#?</h1>
<p>I started using some LinkedList&#39;s instead of Lists in some of my C#
algorithms hoping to speed them up. However, I noticed that they just
felt slower. Like any good developer, I figured that I should do due
diligence and verify my feelings. So I decided to benchmark some simple
loops. You can find the benchmark class
<a href="http://procbits.com/2010/08/25/benchmarking-c-apps-algorithms/">here</a>.</p>
<p>I thought that populating the collections with some random integers
should be sufficient. I ran this code in Debug mode to avoid any
compiler optimizations. Here is the code that I used:</p>
<pre><code class="lang-csharp"><span class="keyword">var</span> rand = <span class="keyword">new</span> Random(Environment.TickCount);
<span class="keyword">var</span> ll = <span class="keyword">new</span> LinkedList&lt;int>();
<span class="keyword">var</span> <span class="keyword">list</span> = <span class="keyword">new</span> <span class="keyword">List</span>&lt;int>();
int count = <span class="number">20000000</span>;

BenchmarkTimer.Start(<span class="string">"Linked List Insert"</span>);
<span class="keyword">for</span> (int x = <span class="number">0</span>; x &lt; count; ++x)
    ll.AddFirst(rand.Next(int.MaxValue));
BenchmarkTimer.StopAndOutput();

BenchmarkTimer.Start(<span class="string">"List Insert"</span>);
<span class="keyword">for</span> (int x = <span class="number">0</span>; x &lt; count; ++x)
    <span class="keyword">list</span>.Add(rand.Next(int.MaxValue));
BenchmarkTimer.StopAndOutput();

int y = <span class="number">0</span>;
BenchmarkTimer.Start(<span class="string">"Linked List Iterate"</span>);
<span class="keyword">foreach</span> (<span class="keyword">var</span> i in ll)
    ++y; <span class="comment">//some atomic operation;</span>
BenchmarkTimer.StopAndOutput();

int z = <span class="number">0</span>;
BenchmarkTimer.Start(<span class="string">"List Iterate"</span>);
<span class="keyword">foreach</span> (<span class="keyword">var</span> i in <span class="keyword">list</span>)
    ++z; <span class="comment">//some atomic operation;</span>
BenchmarkTimer.StopAndOutput();</code></pre>
<p>Here is the output:</p>
<blockquote>
<p>Linked List Insert: 8959.808 ms List Insert: 845.856 ms Linked List
Iterate: 203.632 ms List Iterate: 125.312 ms</p>
</blockquote>
<p>This result baffled me. A Linked List insert should be O(1) whereas as
List Insert is Î˜(1), O(n) (because of copy) if it needs to be resized.
Both list iterations should be O(1) because of the enumerator. I looked
at the disassembled output and it doesn&#39;t shed much light on the
situation.</p>
<p>Anyone else have any thoughts on why this is? Did I miss something
glaringly obvious?</p>
<p>Are you a <a href="http://gitpilot.com">Git</a> user? Let me help you make project
management with Git simple. Checkout <a href="http://gitpilot.com">Gitpilot</a>.</p>
<p>Read me blog on entrepreneurship: <a href="http://techneur.com">Techneur</a> Follow
me on Twitter: <a href="http://twitter.com/jprichardson">@jprichardson</a></p>
<p>-JP</p>


 <div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'procbits'; // required: replace example with your forum shortname

  //optional url
  
    var disqus_url = 'http://procbits.com/2010/09/10/linkedlist-always-slower-than-a-list-in-c/';
  

  //optional id
  

  /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    

          <span id="footer">
            <br/>
            <span style="font-size: 10px">
              Proudly built with <a href="https://github.com/skywrite">Sky</a>.
            </span>
          </span>
        </div>
      </div>
    </div>
    
  </body>
</html>
