<!DOCTYPE html>
<title>Three Ways to Sort a List of Objects with DateTime in C#</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="author" content="JP Richardson">
<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/css/bootstrap.min.css" rel="stylesheet" media="screen">
<link href="/assets/css/highlight.css" rel="stylesheet">
<link href="/assets/css/style.css" rel="stylesheet">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/js/bootstrap.min.js"></script>
<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/css/bootstrap-glyphicons.css" rel="stylesheet">
<script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
  
  
  
</script>
<div id="wrap">
  <div class="navbar navbar-default">
    <div class="container">
      <div class="navbar-header">
        <button data-toggle="collapse" data-target=".navbar-collapse" class="navbar-toggle"><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a href="http://procbits.com" class="navbar-brand">procbits</a>
      </div>
      <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav pull-right"> 
          <li><a href="/pages/about">About            </a></li>
          <li><a href="/tags">Tags</a></li>
          <li><a href="/rss.xml">RSS</a></li>
        </ul>
      </div>
    </div>
  </div>
  <div class="container"> <h1>Three Ways to Sort a List of Objects with DateTime in C#</h1>

<p>Here are three quick ways to sort a List of objects that have DateTime
properties in C#.</p>
<p>Initial Code:</p>
<div class="highlight"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Person</span><span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span><span class="p">;</span>
    <span class="k">public</span> <span class="n">DateTime</span> <span class="n">Birthday</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">var</span> <span class="n">people</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Person</span><span class="p">&gt;();</span>
<span class="kt">var</span> <span class="n">p1</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Person</span><span class="p">()</span> <span class="p">{</span> <span class="n">Name</span> <span class="p">=</span> <span class="s">&quot;Leslie&quot;</span><span class="p">,</span> <span class="n">Birthday</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="p">(</span><span class="m">1983</span><span class="p">,</span> <span class="m">9</span><span class="p">,</span> <span class="m">4</span><span class="p">)</span> <span class="p">};</span>
<span class="kt">var</span> <span class="n">p2</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Person</span><span class="p">()</span> <span class="p">{</span> <span class="n">Name</span> <span class="p">=</span> <span class="s">&quot;Chris&quot;</span><span class="p">,</span> <span class="n">Birthday</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="p">(</span><span class="m">2001</span><span class="p">,</span> <span class="m">6</span><span class="p">,</span> <span class="m">19</span><span class="p">)</span> <span class="p">};</span>
<span class="kt">var</span> <span class="n">p3</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Person</span><span class="p">()</span> <span class="p">{</span> <span class="n">Name</span> <span class="p">=</span> <span class="s">&quot;JP&quot;</span><span class="p">,</span> <span class="n">Birthday</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="p">(</span><span class="m">1983</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">5</span><span class="p">)</span> <span class="p">};</span>

<span class="n">people</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">p1</span><span class="p">);</span> <span class="n">people</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">p2</span><span class="p">);</span> <span class="n">people</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">p3</span><span class="p">);</span>
<span class="n">people</span><span class="p">.</span><span class="n">ForEach</span><span class="p">(</span><span class="n">p</span> <span class="p">=&gt;</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">p</span><span class="p">.</span><span class="n">Name</span><span class="p">));</span>
</pre></div>

<p>You can see that the output is: &quot;Leslie&quot;, &quot;Chris&quot;, and then &quot;JP&quot;</p>
<p>Let&#39;s start with the LINQ way:</p>
<div class="highlight"><pre><span class="kt">var</span> <span class="n">persons</span> <span class="p">=</span> <span class="k">from</span> <span class="n">p</span> <span class="k">in</span> <span class="n">people</span>
            <span class="k">orderby</span> <span class="n">p</span><span class="p">.</span><span class="n">Birthday</span>
            <span class="k">select</span> <span class="n">p</span><span class="p">;</span>
<span class="n">persons</span><span class="p">.</span><span class="n">ToList</span><span class="p">().</span><span class="n">ForEach</span><span class="p">(</span><span class="n">p</span> <span class="p">=&gt;</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">p</span><span class="p">.</span><span class="n">Name</span><span class="p">));</span>
</pre></div>

<p>You can see the correct output: &quot;JP&quot;, &quot;Leslie&quot;, and then &quot;Chris&quot;</p>
<p>Old fashion way using a Delegate:</p>
<div class="highlight"><pre><span class="n">people</span><span class="p">.</span><span class="n">Sort</span><span class="p">(</span><span class="k">delegate</span><span class="p">(</span><span class="n">Person</span> <span class="n">ps1</span><span class="p">,</span> <span class="n">Person</span> <span class="n">ps2</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Compare</span><span class="p">(</span><span class="n">ps1</span><span class="p">.</span><span class="n">Birthday</span><span class="p">,</span> <span class="n">ps2</span><span class="p">.</span><span class="n">Birthday</span><span class="p">);</span> <span class="p">});</span>
<span class="n">people</span><span class="p">.</span><span class="n">ForEach</span><span class="p">(</span><span class="n">p</span> <span class="p">=&gt;</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">p</span><span class="p">.</span><span class="n">Name</span><span class="p">));</span>
</pre></div>

<p>Cleaner way using a Lambda:</p>
<div class="highlight"><pre><span class="n">people</span><span class="p">.</span><span class="n">Sort</span><span class="p">((</span><span class="n">ps1</span><span class="p">,</span> <span class="n">ps2</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Compare</span><span class="p">(</span><span class="n">ps1</span><span class="p">.</span><span class="n">Birthday</span><span class="p">,</span> <span class="n">ps2</span><span class="p">.</span><span class="n">Birthday</span><span class="p">));</span>
<span class="n">people</span><span class="p">.</span><span class="n">ForEach</span><span class="p">(</span><span class="n">p</span> <span class="p">=&gt;</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">p</span><span class="p">.</span><span class="n">Name</span><span class="p">));</span>
</pre></div>

<p>Are you a <a href="http://gitpilot.com">Git</a> user? Let me help you make project
management with Git simple. Checkout <a href="http://gitpilot.com">Gitpilot</a>.</p>
<p>Read me blog on entrepreneurship: <a href="http://techneur.com">Techneur</a> Follow
me on Twitter: <a href="http://twitter.com/jprichardson">@jprichardson</a></p>
<p>-JP</p>


<!--<p>
  If you made it this far, you should follow me on Twitter. &nbsp; <a style="margin-top: -3px" href="https://twitter.com/jprichardson" class="twitter-follow-button" data-show-count="false">Follow @jprichardson</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</p>-->

<p>
If you made it this far, you should <a href="http://twitter.com/jprichardson">follow me on Twitter</a>.
</p>

<p>
  -JP
</p>

<p style="border: 1px solid #ccc; background-color: #f8f8f8; padding: 3px;">
Want to test-drive Bitcoin without any risk? Check out my 
  <a href="https://play.google.com/store/apps/details?id=com.coinbolt.bitcoin">
    bitcoin wallet Coinbolt</a>. It includes test coins for free.
</p>

 <div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'procbits'; // required: replace example with your forum shortname

  //optional url
  
    var disqus_url = 'http://procbits.com/2010/09/09/three-ways-to-sort-a-list-of-objects-with-datetime-in-c/';
  

  //optional id
  

  /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    
  </div>
</div>
<div id="footer">
  <div class="container">
    <p class="text-muted credit">Proudly built with<a href="https://github.com/skywrite"> Sky</a></p>
  </div>
</div>
<div class="scripts">  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-35069840-2']);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
</div>