<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Convert a CSV to XML using C#</title>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="JP Richardson">
    <link href="http://netdna.bootstrapcdn.com/bootswatch/2.1.1/spacelab/bootstrap.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/highlight.css" rel="stylesheet">
  </head>
  <body>
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid nav-container">
          <nav role="navigation"><a title="" href="http://procbits.com" class="brand">procbits</a>
            <p class="navbar-text pull-left">source code snippets and other random musings about software</p>
            <ul class="nav pull-right">             
              <li><a href="/tags">Tags</a></li>
              <li><a href="/rss.xml">RSS</a></li>
            </ul>
          </nav><a data-toggle="collapse" data-target=".nav-collapse" href="http://procbits.com" class="btn btn-navbar">procbits<span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></a>
        </div>
      </div>
    </div>
    <div class="container-fluid">
      <div id="content" class="clearfix row-fluid">
        <div id="main" role="main" class="span8 clearfix"><h1>Convert a CSV to XML using C#</h1>

<p>I wrote a simple class that will help you convert a CSV file to XML. I
can hear you asking &quot;that&#39;s nice JP, but why would I want to convert my
simple CSV to that messy text format from the early 2000&#39;s?&quot; You would
do this because you want to use LINQ with CSV files... that&#39;s why.</p>
<p>Here is the crux of the algorithm:</p>
<div class="highlight"><pre><span class="k">public</span> <span class="k">void</span> <span class="nf">Convert</span><span class="p">()</span> <span class="p">{</span>
    <span class="kt">var</span> <span class="n">tempLines</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="n">ReadAllLines</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">CsvFile</span><span class="p">);</span>
    <span class="kt">string</span><span class="p">[]</span> <span class="n">lines</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
    <span class="n">_columnNames</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">HasColumnNames</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">_columnNames</span> <span class="p">=</span> <span class="n">Csv</span><span class="p">.</span><span class="n">RecordSplit</span><span class="p">(</span><span class="n">tempLines</span><span class="p">[</span><span class="m">0</span><span class="p">],</span> <span class="k">this</span><span class="p">.</span><span class="n">RecordDelimiter</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">TextQualifier</span><span class="p">);</span>

        <span class="n">lines</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">string</span><span class="p">[</span><span class="n">tempLines</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="m">1</span><span class="p">];</span>
        <span class="n">Array</span><span class="p">.</span><span class="n">Copy</span><span class="p">(</span><span class="n">tempLines</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="n">lines</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">lines</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="kt">var</span> <span class="n">columnCount</span> <span class="p">=</span> <span class="n">Csv</span><span class="p">.</span><span class="n">RecordSplit</span><span class="p">(</span><span class="n">tempLines</span><span class="p">[</span><span class="m">0</span><span class="p">],</span> <span class="k">this</span><span class="p">.</span><span class="n">RecordDelimiter</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">TextQualifier</span><span class="p">).</span><span class="n">Length</span><span class="p">;</span>
        <span class="n">_columnNames</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">string</span><span class="p">[</span><span class="n">columnCount</span><span class="p">];</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&lt;</span> <span class="n">_columnNames</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="p">++</span><span class="n">x</span><span class="p">)</span>
            <span class="n">_columnNames</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="p">=</span> <span class="s">&quot;Column&quot;</span> <span class="p">+</span> <span class="p">(</span><span class="n">x</span><span class="p">+</span><span class="m">1</span><span class="p">);</span>

        <span class="n">lines</span> <span class="p">=</span> <span class="n">tempLines</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">this</span><span class="p">.</span><span class="n">XmlData</span> <span class="p">=</span> <span class="k">new</span> <span class="n">XElement</span><span class="p">(</span><span class="s">&quot;Records&quot;</span><span class="p">,</span>
        <span class="k">from</span> <span class="n">line</span> <span class="k">in</span> <span class="n">lines</span>
        <span class="n">let</span> <span class="n">fields</span> <span class="p">=</span> <span class="n">Csv</span><span class="p">.</span><span class="n">RecordSplit</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">RecordDelimiter</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">TextQualifier</span><span class="p">)</span>
        <span class="k">select</span> <span class="k">new</span> <span class="nf">XElement</span><span class="p">(</span><span class="s">&quot;Record&quot;</span><span class="p">,</span>
            <span class="k">from</span> <span class="n">fieldData</span> <span class="k">in</span> <span class="n">fields</span>
            <span class="n">let</span> <span class="n">i</span> <span class="p">=</span> <span class="n">fields</span><span class="p">.</span><span class="n">ToList</span><span class="p">().</span><span class="n">FindIndex</span><span class="p">(</span><span class="n">f</span> <span class="p">=&gt;</span> <span class="n">f</span> <span class="p">==</span> <span class="n">fieldData</span><span class="p">)</span>
            <span class="k">select</span> <span class="k">new</span> <span class="nf">XElement</span><span class="p">(</span><span class="n">_columnNames</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">fieldData</span><span class="p">)</span>
        <span class="p">)</span>
    <span class="p">);</span>
<span class="p">}</span>
</pre></div>

<p>You can look at the full code in my <a href="http://github.com/jprichardson/CommonLib/blob/master/CommonLib/Data/Csv/CsvToXml.cs">C# CommonLib
library</a>.
As you can see, the code is really straightforward.</p>
<p>Let&#39;s assume that your CSV file looks like this:
<code>&#39;Product&#39;,&#39;Price&#39;,&#39;DateStocked&#39; &#39;Pepsi&#39;,&#39;4.50&#39;,&#39;2010-05-04&#39; &#39;Coke&#39;,&#39;3.00&#39;,&#39;2010-09-22&#39; &#39;Cheetos&#39;,&#39;7.25&#39;,&#39;2009-01-13&#39;</code></p>
<p>You can then run Csv2Xml like this:</p>
<div class="highlight"><pre><span class="kt">var</span> <span class="n">csv</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CsvToXml</span><span class="p">(</span><span class="n">csvFile</span><span class="p">);</span>
<span class="n">csv</span><span class="p">.</span><span class="n">RecordDelimiter</span> <span class="p">=</span> <span class="sc">&#39;,&#39;</span><span class="p">;</span> 
<span class="n">csv</span><span class="p">.</span><span class="n">TextQualifier</span> <span class="p">=</span> <span class="sc">&#39;\&#39;&#39;</span><span class="p">;</span>
<span class="n">csv</span><span class="p">.</span><span class="n">HasColumnNames</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
<span class="n">csv</span><span class="p">.</span><span class="n">Convert</span><span class="p">();</span>

<span class="kt">var</span> <span class="n">actualXml</span> <span class="p">=</span> <span class="n">csv</span><span class="p">.</span><span class="n">XmlString</span><span class="p">;</span>
</pre></div>

<p>The output XML will look like this:</p>
<div class="highlight"><pre><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
<span class="nt">&lt;Records&gt;</span>
    <span class="nt">&lt;Record&gt;</span>
        <span class="nt">&lt;Column1&gt;</span>Pepsi<span class="nt">&lt;/Column1&gt;</span>
        <span class="nt">&lt;Column2&gt;</span>4.50<span class="nt">&lt;/Column2&gt;</span>
        <span class="nt">&lt;Column3&gt;</span>2010-05-04<span class="nt">&lt;/Column3&gt;</span>
    <span class="nt">&lt;/Record&gt;</span>
    <span class="nt">&lt;Record&gt;</span>
        <span class="nt">&lt;Column1&gt;</span>Coke<span class="nt">&lt;/Column1&gt;</span>
        <span class="nt">&lt;Column2&gt;</span>3.00<span class="nt">&lt;/Column2&gt;</span>
        <span class="nt">&lt;Column3&gt;</span>2010-09-22<span class="nt">&lt;/Column3&gt;</span>
    <span class="nt">&lt;/Record&gt;</span>
    <span class="nt">&lt;Record&gt;</span>
        <span class="nt">&lt;Column1&gt;</span>Cheetos<span class="nt">&lt;/Column1&gt;</span>
        <span class="nt">&lt;Column2&gt;</span>7.25<span class="nt">&lt;/Column2&gt;</span>
        <span class="nt">&lt;Column3&gt;</span>2009-01-13<span class="nt">&lt;/Column3&gt;</span>
    <span class="nt">&lt;/Record&gt;</span>
<span class="nt">&lt;/Records&gt;</span>
</pre></div>

<p>If you set &quot;HasColumnNames&quot; to &quot;True&quot;, your XML output will look like
this:</p>
<div class="highlight"><pre><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
<span class="nt">&lt;Records&gt;</span>
    <span class="nt">&lt;Record&gt;</span>
        <span class="nt">&lt;Product&gt;</span>Pepsi<span class="nt">&lt;/Product&gt;</span>
        <span class="nt">&lt;Price&gt;</span>4.50<span class="nt">&lt;/Price&gt;</span>
        <span class="nt">&lt;DateStocked&gt;</span>2010-05-04<span class="nt">&lt;/DateStocked&gt;</span>
    <span class="nt">&lt;/Record&gt;</span>
    <span class="nt">&lt;Record&gt;</span>
        <span class="nt">&lt;Product&gt;</span>Coke<span class="nt">&lt;/Product&gt;</span>
        <span class="nt">&lt;Price&gt;</span>3.00<span class="nt">&lt;/Price&gt;</span>
        <span class="nt">&lt;DateStocked&gt;</span>2010-09-22<span class="nt">&lt;/DateStocked&gt;</span>
    <span class="nt">&lt;/Record&gt;</span>
    <span class="nt">&lt;Record&gt;</span>
        <span class="nt">&lt;Product&gt;</span>Cheetos<span class="nt">&lt;/Product&gt;</span>
        <span class="nt">&lt;Price&gt;</span>7.25<span class="nt">&lt;/Price&gt;</span>
        <span class="nt">&lt;DateStocked&gt;</span>2009-01-13<span class="nt">&lt;/DateStocked&gt;</span>
    <span class="nt">&lt;/Record&gt;</span>
<span class="nt">&lt;/Records&gt;</span>
</pre></div>

<p>Are you a <a href="http://gitpilot.com">Git</a> user? Let me help you make project
management with Git simple. Checkout <a href="http://gitpilot.com">Gitpilot</a>.</p>
<p>Pretty nifty huh? In the next post, I&#39;ll explain how you can use this
with LINQ. In the mean time follow me on Twitter
(<a href="http://twitter.com/jprichardson">@jprichardson</a>) or read my blog on
entrepreneurship: <a href="http://techneur.com">Techneur</a>.</p>
<p>-JP</p>


<p>
  If you made it this far, you should follow me on Twitter. &nbsp; <a style="margin-top: -3px" href="https://twitter.com/jprichardson" class="twitter-follow-button" data-show-count="false">Follow @jprichardson</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</p>

<p>
  -JP
</p>

 <div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'procbits'; // required: replace example with your forum shortname

  //optional url
  
    var disqus_url = 'http://procbits.com/2010/10/07/convert-a-csv-to-xml-using-c/';
  

  //optional id
  

  /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    <span id="footer"><br><span style="font-size: 10px;">Proudly built with<a href="https://github.com/skywrite"> Sky</a></span></span></div>
      </div>
    </div>
    <div class="scripts">  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-35069840-2']);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
    </div>
  </body>
</html>