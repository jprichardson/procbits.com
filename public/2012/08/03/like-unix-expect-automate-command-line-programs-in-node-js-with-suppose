<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Like Unix Expect: Automate Command Line Programs in Node.js with Suppose</title>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="JP">
    <mete name="description" content="">

    <link href="http://netdna.bootstrapcdn.com/bootswatch/2.1.1/spacelab/bootstrap.min.css" rel="stylesheet">
    <link href="/vendor/highlight.js/styles/vs.css" rel="stylesheet">
    <!--<link href="style.css" rel="stylesheet">-->

    <style>
      body {
        padding-top: 60px; /* 60px to make the container go all the way to the bottom of the topbar */
      }
    </style>

    <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

      <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', ]);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
  </head>
  <body>
    
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid nav-container">
          <nav role="navigation">
            <a class="brand" title="" href="http://procbits.com">procbits</a>
            
            <p class="navbar-text pull-left">
              source code snippets and other random musings about software
            </p>
          </nav>

            <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </a>



        </div>
      </div>
    </div>


    <div class="container-fluid">
      <div id="content" class="clearfix row-fluid">
        <div id="main" class="span8 clearfix" role="main">


<h1>Like Unix Expect: Automate Command Line Programs in Node.js with Suppose</h1>
<p>Have you ever heard of the command line program
<a href="http://en.wikipedia.org/wiki/Expect">expect</a>? Basically, expect allows
you to automate command line programs.
<a href="https://github.com/jprichardson/node-suppose">suppose</a> is a
programmable Node.js module that allows the same behavior.</p>
<p>Why would you do this? Maybe you want to automate a ssh session? Or,
maybe you want to test the external interface of on of your Node.js
command line scripts.</p>
<p>Install: <code>npm install suppose</code></p>
<p>Example:</p>
<pre><code class="lang-javascript">process.chdir(<span class="string">'/tmp/awesome'</span>);
suppose(<span class="string">'npm'</span>, [<span class="string">'init'</span>])
  .on(<span class="string">'name: (awesome) '</span>).respond(<span class="string">'awesome_package\n'</span>)
  .on(<span class="string">'version: (0.0.0) '</span>).respond(<span class="string">'0.0.1\n'</span>)
  .on(<span class="string">'description: '</span>).respond(<span class="string">"It's an awesome package man!\n"</span>)
  .on(<span class="string">'entry point: (index.js) '</span>).respond(<span class="string">"\n"</span>)
  .on(<span class="string">'test command: '</span>).respond(<span class="string">'npm test\n'</span>)
  .on(<span class="string">'git repository: '</span>).respond(<span class="string">"\n"</span>)
  .on(<span class="string">'keywords: '</span>).respond(<span class="string">'awesome, cool\n'</span>)
  .on(<span class="string">'author: '</span>).respond(<span class="string">'JP Richardson\n'</span>)
  .on(<span class="string">'license: (BSD) '</span>).respond(<span class="string">'MIT\n'</span>)
  .on(<span class="string">'ok? (yes) '</span> ).respond(<span class="string">'yes\n'</span>)
.end(<span class="keyword">function</span>(code){
    assert(code === <span class="number">0</span>);
    <span class="keyword">var</span> packageFile = <span class="string">'/tmp/awesome/package.json'</span>;
    fs.readFile(packageFile, <span class="keyword">function</span>(err, data){
        <span class="keyword">var</span> packageObj = JSON.parse(data.toString());
        assert(packageObj.name === <span class="string">'awesome_package'</span>);
        assert(packageObj.version === <span class="string">'0.0.1'</span>);
        assert(packageObj.description === <span class="string">"It's an awesome package man!"</span>);
        assert(packageObj.main === <span class="string">'index.js'</span>);
        assert(packageObj.scripts.test === <span class="string">'npm test'</span>);
        assert(packageObj.keywords[<span class="number">0</span>] === <span class="string">'awesome'</span>);
        assert(packageObj.keywords[<span class="number">1</span>] === <span class="string">'cool'</span>);
        assert(packageObj.author === <span class="string">'JP Richardson'</span>);
        assert(packageObj.license === <span class="string">'MIT'</span>);
        done();
    });
});</code></pre>
<p>Pretty easy, huh? You can grab the source on
<a href="https://github.com/jprichardson/node-suppose">Github</a>.</p>
<p>If you use Git with others, you should checkout
<a href="http://gitpilot.com">Gitpilot</a> to make collaboration with Git simple
using a different GUI. We would love your feedback.</p>
<p>Follow me on Twitter: <a href="http://twitter.com/jprichardson">@jprichardson</a></p>
<p>-JP</p>



          <span id="footer">
            <br/>
            <span style="font-size: 10px">
              Proudly built with <a href="{{sky.homepage}}">Sky</a>.
            </span>
          </span>
        </div>
      </div>
    </div>
    
  </body>
</html>
