<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Like Unix Expect</title>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="JP Richardson">
    <link href="http://netdna.bootstrapcdn.com/bootswatch/2.1.1/spacelab/bootstrap.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/highlight.css" rel="stylesheet">
  </head>
  <body>
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid nav-container">
          <nav role="navigation"><a title="" href="http://procbits.com" class="brand">procbits</a>
            <p class="navbar-text pull-left">source code snippets and other random musings about software</p>
            <ul class="nav pull-right">             
              <li><a href="/tags">Tags</a></li>
              <li><a href="/rss.xml">RSS</a></li>
            </ul>
          </nav><a data-toggle="collapse" data-target=".nav-collapse" href="http://procbits.com" class="btn btn-navbar">procbits<span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></a>
        </div>
      </div>
    </div>
    <div class="container-fluid">
      <div id="content" class="clearfix row-fluid">
        <div id="main" role="main" class="span8 clearfix"><h1>Like Unix Expect</h1>

<p>Have you ever heard of the command line program
<a href="http://en.wikipedia.org/wiki/Expect">expect</a>? Basically, expect allows
you to automate command line programs.
<a href="https://github.com/jprichardson/node-suppose">suppose</a> is a
programmable Node.js module that allows the same behavior.</p>
<p>Why would you do this? Maybe you want to automate a ssh session? Or,
maybe you want to test the external interface of on of your Node.js
command line scripts.</p>
<p>Install: <code>npm install suppose</code></p>
<p>Example:</p>
<div class="highlight"><pre><span class="nx">process</span><span class="p">.</span><span class="nx">chdir</span><span class="p">(</span><span class="s1">&#39;/tmp/awesome&#39;</span><span class="p">);</span>
<span class="nx">suppose</span><span class="p">(</span><span class="s1">&#39;npm&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;init&#39;</span><span class="p">])</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;name: (awesome) &#39;</span><span class="p">).</span><span class="nx">respond</span><span class="p">(</span><span class="s1">&#39;awesome_package\n&#39;</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;version: (0.0.0) &#39;</span><span class="p">).</span><span class="nx">respond</span><span class="p">(</span><span class="s1">&#39;0.0.1\n&#39;</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;description: &#39;</span><span class="p">).</span><span class="nx">respond</span><span class="p">(</span><span class="s2">&quot;It&#39;s an awesome package man!\n&quot;</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;entry point: (index.js) &#39;</span><span class="p">).</span><span class="nx">respond</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;test command: &#39;</span><span class="p">).</span><span class="nx">respond</span><span class="p">(</span><span class="s1">&#39;npm test\n&#39;</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;git repository: &#39;</span><span class="p">).</span><span class="nx">respond</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;keywords: &#39;</span><span class="p">).</span><span class="nx">respond</span><span class="p">(</span><span class="s1">&#39;awesome, cool\n&#39;</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;author: &#39;</span><span class="p">).</span><span class="nx">respond</span><span class="p">(</span><span class="s1">&#39;JP Richardson\n&#39;</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;license: (BSD) &#39;</span><span class="p">).</span><span class="nx">respond</span><span class="p">(</span><span class="s1">&#39;MIT\n&#39;</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;ok? (yes) &#39;</span> <span class="p">).</span><span class="nx">respond</span><span class="p">(</span><span class="s1">&#39;yes\n&#39;</span><span class="p">)</span>
<span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">code</span><span class="p">){</span>
    <span class="nx">assert</span><span class="p">(</span><span class="nx">code</span> <span class="o">===</span> <span class="mi">0</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">packageFile</span> <span class="o">=</span> <span class="s1">&#39;/tmp/awesome/package.json&#39;</span><span class="p">;</span>
    <span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="nx">packageFile</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">){</span>
        <span class="kd">var</span> <span class="nx">packageObj</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span>
        <span class="nx">assert</span><span class="p">(</span><span class="nx">packageObj</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="s1">&#39;awesome_package&#39;</span><span class="p">);</span>
        <span class="nx">assert</span><span class="p">(</span><span class="nx">packageObj</span><span class="p">.</span><span class="nx">version</span> <span class="o">===</span> <span class="s1">&#39;0.0.1&#39;</span><span class="p">);</span>
        <span class="nx">assert</span><span class="p">(</span><span class="nx">packageObj</span><span class="p">.</span><span class="nx">description</span> <span class="o">===</span> <span class="s2">&quot;It&#39;s an awesome package man!&quot;</span><span class="p">);</span>
        <span class="nx">assert</span><span class="p">(</span><span class="nx">packageObj</span><span class="p">.</span><span class="nx">main</span> <span class="o">===</span> <span class="s1">&#39;index.js&#39;</span><span class="p">);</span>
        <span class="nx">assert</span><span class="p">(</span><span class="nx">packageObj</span><span class="p">.</span><span class="nx">scripts</span><span class="p">.</span><span class="nx">test</span> <span class="o">===</span> <span class="s1">&#39;npm test&#39;</span><span class="p">);</span>
        <span class="nx">assert</span><span class="p">(</span><span class="nx">packageObj</span><span class="p">.</span><span class="nx">keywords</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">===</span> <span class="s1">&#39;awesome&#39;</span><span class="p">);</span>
        <span class="nx">assert</span><span class="p">(</span><span class="nx">packageObj</span><span class="p">.</span><span class="nx">keywords</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">===</span> <span class="s1">&#39;cool&#39;</span><span class="p">);</span>
        <span class="nx">assert</span><span class="p">(</span><span class="nx">packageObj</span><span class="p">.</span><span class="nx">author</span> <span class="o">===</span> <span class="s1">&#39;JP Richardson&#39;</span><span class="p">);</span>
        <span class="nx">assert</span><span class="p">(</span><span class="nx">packageObj</span><span class="p">.</span><span class="nx">license</span> <span class="o">===</span> <span class="s1">&#39;MIT&#39;</span><span class="p">);</span>
        <span class="nx">done</span><span class="p">();</span>
    <span class="p">});</span>
<span class="p">});</span>
</pre></div>

<p>Pretty easy, huh? You can grab the source on
<a href="https://github.com/jprichardson/node-suppose">Github</a>.</p>
<p>If you use Git with others, you should checkout
<a href="http://gitpilot.com">Gitpilot</a> to make collaboration with Git simple
using a different GUI. We would love your feedback.</p>
<p>Follow me on Twitter: <a href="http://twitter.com/jprichardson">@jprichardson</a></p>
<p>-JP</p>


 <div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'procbits'; // required: replace example with your forum shortname

  //optional url
  
    var disqus_url = 'http://procbits.com/2012/08/03/like-unix-expect-automate-command-line-programs-in-node-js-with-suppose/';
  

  //optional id
  

  /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    <span id="footer"><br><span style="font-size: 10px;">Proudly built with<a href="https://github.com/skywrite"> Sky</a></span></span></div>
      </div>
    </div>
    <div class="scripts">  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-35069840-2']);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
    </div>
  </body>
</html>