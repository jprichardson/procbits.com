<!DOCTYPE html>
<title>Submitting/Posting Files and Fields to an HTTP Form using C#/.NET</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="author" content="JP Richardson">
<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/css/bootstrap.min.css" rel="stylesheet" media="screen">
<link href="/assets/css/style.css" rel="stylesheet">
<link href="/assets/css/highlight.css" rel="stylesheet">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/js/bootstrap.min.js"></script>
<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc2/css/bootstrap-glyphicons.css" rel="stylesheet">
<script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
  
  
  
</script>
<div id="wrap">
  <div class="navbar navbar-default">
    <div class="container">
      <div class="navbar-header">
        <button data-toggle="collapse" data-target=".navbar-collapse" class="navbar-toggle"><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a href="http://procbits.com" class="navbar-brand">procbits</a>
      </div>
      <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav pull-right"> 
          <li><a href="/pages/about">About            </a></li>
          <li><a href="/tags">Tags</a></li>
          <li><a href="/rss.xml">RSS</a></li>
        </ul>
      </div>
    </div>
  </div>
  <div class="container"> <h1>Submitting/Posting Files and Fields to an HTTP Form using C#/.NET</h1>

<p>Awhile back, I had to integrate a C# program with a web system that
allowed the user to upload a few files and include some misc. data. I
Googled around and didn&#39;t find a comprehensive solution.</p>
<p>I did use some code I found on the internet, unfortunately I don&#39;t
remember where, so I can&#39;t give proper attribution. If you know, please
let me know; it&#39;s the code relevant to the <code>MimePart</code> class. I added the
form values code and packaged it up into the <code>HttpForm</code> sugar.</p>
<p>Here is the code:</p>
<div class="highlight"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">HttpForm</span> <span class="p">{</span>

    <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;</span> <span class="n">_files</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;();</span>
    <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;</span> <span class="n">_values</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;();</span>

    <span class="k">public</span> <span class="nf">HttpForm</span><span class="p">(</span><span class="kt">string</span> <span class="n">url</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="n">Url</span> <span class="p">=</span> <span class="n">url</span><span class="p">;</span>
        <span class="k">this</span><span class="p">.</span><span class="n">Method</span> <span class="p">=</span> <span class="s">&quot;POST&quot;</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="kt">string</span> <span class="n">Method</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Url</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>

    <span class="c1">//return self so that we can chain</span>
    <span class="k">public</span> <span class="n">HttpForm</span> <span class="nf">AttachFile</span><span class="p">(</span><span class="kt">string</span> <span class="n">field</span><span class="p">,</span> <span class="kt">string</span> <span class="n">fileName</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">_files</span><span class="p">[</span><span class="n">field</span><span class="p">]</span> <span class="p">=</span> <span class="n">fileName</span><span class="p">;</span>
        <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="n">HttpForm</span> <span class="nf">ResetForm</span><span class="p">(){</span>
        <span class="n">_files</span><span class="p">.</span><span class="n">Clear</span><span class="p">();</span>
        <span class="n">_values</span><span class="p">.</span><span class="n">Clear</span><span class="p">();</span>
        <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">//return self so that we can chain</span>
    <span class="k">public</span> <span class="n">HttpForm</span> <span class="nf">SetValue</span><span class="p">(</span><span class="kt">string</span> <span class="n">field</span><span class="p">,</span> <span class="kt">string</span> <span class="k">value</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">_values</span><span class="p">[</span><span class="n">field</span><span class="p">]</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span>
        <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="n">HttpWebResponse</span> <span class="nf">Submit</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="n">UploadFiles</span><span class="p">(</span><span class="n">_files</span><span class="p">,</span> <span class="n">_values</span><span class="p">);</span>
    <span class="p">}</span>


    <span class="k">private</span> <span class="n">HttpWebResponse</span> <span class="nf">UploadFiles</span><span class="p">(</span><span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;</span> <span class="n">files</span><span class="p">,</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;</span> <span class="n">otherValues</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">var</span> <span class="n">req</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebRequest</span><span class="p">)</span><span class="n">WebRequest</span><span class="p">.</span><span class="n">Create</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">Url</span><span class="p">);</span>

        <span class="n">req</span><span class="p">.</span><span class="n">Timeout</span> <span class="p">=</span> <span class="m">10000</span> <span class="p">*</span> <span class="m">1000</span><span class="p">;</span>
        <span class="n">req</span><span class="p">.</span><span class="n">Accept</span> <span class="p">=</span> <span class="s">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&quot;</span><span class="p">;</span>
        <span class="n">req</span><span class="p">.</span><span class="n">AllowAutoRedirect</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>

        <span class="kt">var</span> <span class="n">mimeParts</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">MimePart</span><span class="p">&gt;();</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">otherValues</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">fieldName</span> <span class="k">in</span> <span class="n">otherValues</span><span class="p">.</span><span class="n">Keys</span><span class="p">)</span> <span class="p">{</span>
                    <span class="kt">var</span> <span class="n">part</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MimePart</span><span class="p">();</span>

                    <span class="n">part</span><span class="p">.</span><span class="n">Headers</span><span class="p">[</span><span class="s">&quot;Content-Disposition&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="s">&quot;form-data; name=\&quot;&quot;</span> <span class="p">+</span> <span class="n">fieldName</span> <span class="p">+</span> <span class="s">&quot;\&quot;&quot;</span><span class="p">;</span>
                    <span class="n">part</span><span class="p">.</span><span class="n">Data</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MemoryStream</span><span class="p">(</span><span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">.</span><span class="n">GetBytes</span><span class="p">(</span><span class="n">otherValues</span><span class="p">[</span><span class="n">fieldName</span><span class="p">]));</span>

                    <span class="n">mimeParts</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">part</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">files</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">fieldName</span> <span class="k">in</span> <span class="n">files</span><span class="p">.</span><span class="n">Keys</span><span class="p">)</span> <span class="p">{</span>
                    <span class="kt">var</span> <span class="n">part</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MimePart</span><span class="p">();</span>

                    <span class="n">part</span><span class="p">.</span><span class="n">Headers</span><span class="p">[</span><span class="s">&quot;Content-Disposition&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="s">&quot;form-data; name=\&quot;&quot;</span> <span class="p">+</span> <span class="n">fieldName</span> <span class="p">+</span> <span class="s">&quot;\&quot;; filename=\&quot;&quot;</span> <span class="p">+</span> <span class="n">files</span><span class="p">[</span><span class="n">fieldName</span><span class="p">]</span> <span class="p">+</span> <span class="s">&quot;\&quot;&quot;</span><span class="p">;</span>
                    <span class="n">part</span><span class="p">.</span><span class="n">Headers</span><span class="p">[</span><span class="s">&quot;Content-Type&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="s">&quot;application/octet-stream&quot;</span><span class="p">;</span>
                    <span class="n">part</span><span class="p">.</span><span class="n">Data</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="n">OpenRead</span><span class="p">(</span><span class="n">files</span><span class="p">[</span><span class="n">fieldName</span><span class="p">]);</span>

                    <span class="n">mimeParts</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">part</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>

            <span class="kt">string</span> <span class="n">boundary</span> <span class="p">=</span> <span class="s">&quot;----------&quot;</span> <span class="p">+</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Ticks</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="s">&quot;x&quot;</span><span class="p">);</span>

            <span class="n">req</span><span class="p">.</span><span class="n">ContentType</span> <span class="p">=</span> <span class="s">&quot;multipart/form-data; boundary=&quot;</span> <span class="p">+</span> <span class="n">boundary</span><span class="p">;</span>
            <span class="n">req</span><span class="p">.</span><span class="n">Method</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Method</span><span class="p">;</span>

            <span class="kt">long</span> <span class="n">contentLength</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

            <span class="kt">byte</span><span class="p">[]</span> <span class="n">_footer</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">.</span><span class="n">GetBytes</span><span class="p">(</span><span class="s">&quot;--&quot;</span> <span class="p">+</span> <span class="n">boundary</span> <span class="p">+</span> <span class="s">&quot;--\r\n&quot;</span><span class="p">);</span>

            <span class="k">foreach</span> <span class="p">(</span><span class="n">MimePart</span> <span class="n">part</span> <span class="k">in</span> <span class="n">mimeParts</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">contentLength</span> <span class="p">+=</span> <span class="n">part</span><span class="p">.</span><span class="n">GenerateHeaderFooterData</span><span class="p">(</span><span class="n">boundary</span><span class="p">);</span>
            <span class="p">}</span>

            <span class="n">req</span><span class="p">.</span><span class="n">ContentLength</span> <span class="p">=</span> <span class="n">contentLength</span> <span class="p">+</span> <span class="n">_footer</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span>

            <span class="kt">byte</span><span class="p">[]</span> <span class="n">buffer</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="p">[</span><span class="m">8192</span><span class="p">];</span>
            <span class="kt">byte</span><span class="p">[]</span> <span class="n">afterFile</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">.</span><span class="n">GetBytes</span><span class="p">(</span><span class="s">&quot;\r\n&quot;</span><span class="p">);</span>
            <span class="kt">int</span> <span class="n">read</span><span class="p">;</span>

            <span class="k">using</span> <span class="p">(</span><span class="n">Stream</span> <span class="n">s</span> <span class="p">=</span> <span class="n">req</span><span class="p">.</span><span class="n">GetRequestStream</span><span class="p">())</span> <span class="p">{</span>
                <span class="k">foreach</span> <span class="p">(</span><span class="n">MimePart</span> <span class="n">part</span> <span class="k">in</span> <span class="n">mimeParts</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">s</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">part</span><span class="p">.</span><span class="n">Header</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">part</span><span class="p">.</span><span class="n">Header</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>

                    <span class="k">while</span> <span class="p">((</span><span class="n">read</span> <span class="p">=</span> <span class="n">part</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">Read</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">buffer</span><span class="p">.</span><span class="n">Length</span><span class="p">))</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
                        <span class="n">s</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">read</span><span class="p">);</span>

                    <span class="n">part</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>

                    <span class="n">s</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">afterFile</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">afterFile</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>
                <span class="p">}</span>

                <span class="n">s</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">_footer</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">_footer</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>
            <span class="p">}</span>

            <span class="kt">var</span> <span class="n">res</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebResponse</span><span class="p">)</span><span class="n">req</span><span class="p">.</span><span class="n">GetResponse</span><span class="p">();</span>

            <span class="k">return</span> <span class="n">res</span><span class="p">;</span>
        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
            <span class="k">foreach</span> <span class="p">(</span><span class="n">MimePart</span> <span class="n">part</span> <span class="k">in</span> <span class="n">mimeParts</span><span class="p">)</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">part</span><span class="p">.</span><span class="n">Data</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
                    <span class="n">part</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>

            <span class="k">return</span> <span class="p">(</span><span class="n">HttpWebResponse</span><span class="p">)</span><span class="n">req</span><span class="p">.</span><span class="n">GetResponse</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">class</span> <span class="nc">MimePart</span> <span class="p">{</span>
        <span class="k">private</span> <span class="n">NameValueCollection</span> <span class="n">_headers</span> <span class="p">=</span> <span class="k">new</span> <span class="n">NameValueCollection</span><span class="p">();</span>
        <span class="k">public</span> <span class="n">NameValueCollection</span> <span class="n">Headers</span> <span class="p">{</span> <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_headers</span><span class="p">;</span> <span class="p">}</span> <span class="p">}</span>

        <span class="k">public</span> <span class="kt">byte</span><span class="p">[]</span> <span class="n">Header</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">protected</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>

        <span class="k">public</span> <span class="kt">long</span> <span class="nf">GenerateHeaderFooterData</span><span class="p">(</span><span class="kt">string</span> <span class="n">boundary</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="p">();</span>

            <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="s">&quot;--&quot;</span><span class="p">);</span>
            <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">boundary</span><span class="p">);</span>
            <span class="n">sb</span><span class="p">.</span><span class="n">AppendLine</span><span class="p">();</span>
            <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">key</span> <span class="k">in</span> <span class="n">_headers</span><span class="p">.</span><span class="n">AllKeys</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">key</span><span class="p">);</span>
                <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="s">&quot;: &quot;</span><span class="p">);</span>
                <span class="n">sb</span><span class="p">.</span><span class="n">AppendLine</span><span class="p">(</span><span class="n">_headers</span><span class="p">[</span><span class="n">key</span><span class="p">]);</span>
            <span class="p">}</span>
            <span class="n">sb</span><span class="p">.</span><span class="n">AppendLine</span><span class="p">();</span>

            <span class="n">Header</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">.</span><span class="n">GetBytes</span><span class="p">(</span><span class="n">sb</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>

            <span class="k">return</span> <span class="n">Header</span><span class="p">.</span><span class="n">Length</span> <span class="p">+</span> <span class="n">Data</span><span class="p">.</span><span class="n">Length</span> <span class="p">+</span> <span class="m">2</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="n">Stream</span> <span class="n">Data</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

<p>You can easily use it like so:</p>
<div class="highlight"><pre><span class="kt">var</span> <span class="n">file1</span> <span class="p">=</span> <span class="s">@&quot;C:\file&quot;</span><span class="p">;</span>
<span class="kt">var</span> <span class="n">file2</span> <span class="p">=</span> <span class="s">@&quot;C:\file2&quot;</span><span class="p">;</span>

<span class="kt">var</span> <span class="n">yourUrl</span> <span class="p">=</span> <span class="s">&quot;http://yourdomain.com/process.php&quot;</span><span class="p">;</span>
<span class="kt">var</span> <span class="n">httpForm</span> <span class="p">=</span> <span class="k">new</span> <span class="n">HttpForm</span><span class="p">(</span><span class="n">yourUrl</span><span class="p">);</span>
<span class="n">httpForm</span><span class="p">.</span><span class="n">AttachFile</span><span class="p">(</span><span class="s">&quot;file1&quot;</span><span class="p">,</span> <span class="n">file1</span><span class="p">).</span><span class="n">AttachFile</span><span class="p">(</span><span class="s">&quot;file2&quot;</span><span class="p">,</span> <span class="n">file2</span><span class="p">);</span>
<span class="n">httpForm</span><span class="p">.</span><span class="n">setValue</span><span class="p">(</span><span class="s">&quot;foo&quot;</span><span class="p">,</span> <span class="s">&quot;some foo&quot;</span><span class="p">).</span><span class="n">setValue</span><span class="p">(</span><span class="s">&quot;blah&quot;</span><span class="p">,</span> <span class="s">&quot;rarrr!&quot;</span><span class="p">);</span>
<span class="n">httpForm</span><span class="p">.</span><span class="n">Submit</span><span class="p">();</span>
</pre></div>

<p>Do you use Git? If so, checkout <a href="http://gitpilot.com">Gitpilot</a> to make
using Git thoughtless.</p>
<p>Follow me on Twitter: <a href="http://twitter.com/jprichardson">@jprichardson</a>.</p>
<p>-JP Richardson</p>


<!--<p>
  If you made it this far, you should follow me on Twitter. &nbsp; <a style="margin-top: -3px" href="https://twitter.com/jprichardson" class="twitter-follow-button" data-show-count="false">Follow @jprichardson</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</p>-->

<p>
If you made it this far, you should <a href="http://twitter.com/jprichardson">follow me on Twitter</a>.
</p>

<p>
  -JP
</p>

 <div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'procbits'; // required: replace example with your forum shortname

  //optional url
  
    var disqus_url = 'http://procbits.com/2012/02/29/submittingposting-files-and-fields-to-an-http-form-using-c-net/';
  

  //optional id
  

  /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    
  </div>
</div>
<div id="footer">
  <div class="container">
    <p class="text-muted credit">Proudly built with<a href="https://github.com/skywrite"> Sky</a></p>
  </div>
</div>
<div class="scripts">  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-35069840-2']);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
</div>